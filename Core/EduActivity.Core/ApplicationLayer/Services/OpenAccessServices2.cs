

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Telerik.OpenAccess;
using KMU.EduActivity.DomainModel.Entities;
using KMU.EduActivity.ApplicationLayer.Assemblers;
using KMU.EduActivity.ApplicationLayer.DTO;
using KMU.EduActivity.Infrastructure.Data.Repositories;

namespace KMU.EduActivity.ApplicationLayer.Services
{
	
	public partial interface IService<TDto, TEntity>
		where TEntity : class
		where TDto : IDtoWithKey
	{
		IOpenAccessAssembler<TDto, TEntity> Assembler { get; }
		IRepository<TEntity> Repository { get; }

		IEnumerable<TDto> Find(Expression<Func<TEntity, bool>> filter);
		IEnumerable<TDto> GetAll();

		IEnumerable<TDto> Find(int startRowIndex, int maximumRows);
		IEnumerable<TDto> Find(string sortExpression, string filterExpression);
		IEnumerable<TDto> Find(int? startRowIndex, int? maximumRows, string sortExpression, string filterExpression);

		int Count();
		int Count(string filterExpression);

		TDto GetByKey(string dtoKey);
		string Add(TDto dto);
		void Update(TDto dto);
		void Delete(TDto dto);
	}

	public abstract partial class Service<TDto, TEntity> : IService<TDto, TEntity>
		where TEntity : class
		where TDto : IDtoWithKey
	{
		IOpenAccessAssembler<TDto, TEntity> assembler;
		IRepository<TEntity> repository;

		public Service(IOpenAccessAssembler<TDto, TEntity> assembler,
			IRepository<TEntity> repository)
		{
			this.assembler = assembler;
			this.repository = repository;
		}

		public IOpenAccessAssembler<TDto, TEntity> Assembler
		{
			get
			{
				return this.assembler;
			}
		}

		public IRepository<TEntity> Repository
		{
			get
			{
				return this.repository;
			}
		}

		public virtual IEnumerable<TDto> GetAll()
		{
			return this.assembler.Assemble(this.Repository.GetAll());
		}

		public virtual IEnumerable<TDto> Find(Expression<Func<TEntity, bool>> filter)
		{
			return this.Assembler.Assemble(this.Repository.Find(filter));
		}

		public virtual IEnumerable<TDto> Find(int startRowIndex, int maximumRows)
		{
			return this.Find(startRowIndex, maximumRows, null, null);
		}

		public virtual IEnumerable<TDto> Find(string sortExpression, string filterExpression)
		{
			return this.Find(null, null, sortExpression, filterExpression);
		}

		public virtual IEnumerable<TDto> Find(int? startRowIndex, int? maximumRows, string sortExpression, string filterExpression)
		{
			IQueryable<TEntity> query = this.Repository.GetAll();

			if (!string.IsNullOrEmpty(filterExpression))
			{
				query = query.Where(filterExpression);
			}
			if (!string.IsNullOrEmpty(sortExpression))
			{
				query = query.OrderBy(sortExpression);
			}
			if (startRowIndex.HasValue)
			{
				query = query.Skip(startRowIndex.Value);
			}
			if (maximumRows.HasValue)
			{
				query = query.Take(maximumRows.Value);
			}

			return this.Assembler.Assemble(query);
		}

		public virtual int Count()
		{
			return this.Count(string.Empty);
		}

		public virtual int Count(string filterExpression)
		{
			IQueryable<TEntity> query = this.Repository.GetAll();

			if (!string.IsNullOrEmpty(filterExpression))
			{
				query = query.Where(filterExpression);
			}

			return query.Count();
		}

		public virtual TDto GetByKey(string dtoKey)
		{
			ObjectKey key = KeyUtility.Instance.Convert<TEntity>(dtoKey);

			return this.assembler.Assemble(this.Repository.Get(key));
		}

		public virtual string Add(TDto dto)
		{
			TEntity entity = this.assembler.Assemble(null, dto);

			this.repository.Add(entity);

			ObjectKey key = KeyUtility.Instance.Create(entity);

			return KeyUtility.Instance.Convert(key);
		}

		public virtual void Update(TDto dto)
		{
			ObjectKey key = KeyUtility.Instance.Convert<TEntity>(dto.DtoKey);
			TEntity entity = this.repository.Get(key);

			this.assembler.Assemble(entity, dto);
		}

		public virtual void Delete(TDto dto)
		{
			ObjectKey key = KeyUtility.Instance.Convert<TEntity>(dto.DtoKey);
			TEntity entity = this.repository.Get(key);

			this.Repository.Remove(entity);
		}
	}

	public partial interface IEduTermCodeService : IService<EduTermCodeDto, EduTermCode>
	{
	}


	public partial class EduTermCodeService : Service<EduTermCodeDto, EduTermCode>, IEduTermCodeService
	{
		public EduTermCodeService(IEduTermCodeAssembler assembler, IEduTermCodeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IMemberService : IService<MemberDto, Member>
	{
	}


	public partial class MemberService : Service<MemberDto, Member>, IMemberService
	{
		public MemberService(IMemberAssembler assembler, IMemberRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTeamMemberService : IService<EduTeamMemberDto, EduTeamMember>
	{
	}


	public partial class EduTeamMemberService : Service<EduTeamMemberDto, EduTeamMember>, IEduTeamMemberService
	{
		public EduTeamMemberService(IEduTeamMemberAssembler assembler, IEduTeamMemberRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTeamRundownService : IService<EduTeamRundownDto, EduTeamRundown>
	{
	}


	public partial class EduTeamRundownService : Service<EduTeamRundownDto, EduTeamRundown>, IEduTeamRundownService
	{
		public EduTeamRundownService(IEduTeamRundownAssembler assembler, IEduTeamRundownRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTeamMemberRundownService : IService<EduTeamMemberRundownDto, EduTeamMemberRundown>
	{
	}


	public partial class EduTeamMemberRundownService : Service<EduTeamMemberRundownDto, EduTeamMemberRundown>, IEduTeamMemberRundownService
	{
		public EduTeamMemberRundownService(IEduTeamMemberRundownAssembler assembler, IEduTeamMemberRundownRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTeamService : IService<EduTeamDto, EduTeam>
	{
	}


	public partial class EduTeamService : Service<EduTeamDto, EduTeam>, IEduTeamService
	{
		public EduTeamService(IEduTeamAssembler assembler, IEduTeamRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduActTopicService : IService<EduActTopicDto, EduActTopic>
	{
	}


	public partial class EduActTopicService : Service<EduActTopicDto, EduActTopic>, IEduActTopicService
	{
		public EduActTopicService(IEduActTopicAssembler assembler, IEduActTopicRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduStopActScheduleService : IService<EduStopActScheduleDto, EduStopActSchedule>
	{
	}


	public partial class EduStopActScheduleService : Service<EduStopActScheduleDto, EduStopActSchedule>, IEduStopActScheduleService
	{
		public EduStopActScheduleService(IEduStopActScheduleAssembler assembler, IEduStopActScheduleRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IForm_ToDo_ListService : IService<Form_ToDo_ListDto, Form_ToDo_List>
	{
	}


	public partial class Form_ToDo_ListService : Service<Form_ToDo_ListDto, Form_ToDo_List>, IForm_ToDo_ListService
	{
		public Form_ToDo_ListService(IForm_ToDo_ListAssembler assembler, IForm_ToDo_ListRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTermFormInstanceService : IService<EduTermFormInstanceDto, EduTermFormInstance>
	{
	}


	public partial class EduTermFormInstanceService : Service<EduTermFormInstanceDto, EduTermFormInstance>, IEduTermFormInstanceService
	{
		public EduTermFormInstanceService(IEduTermFormInstanceAssembler assembler, IEduTermFormInstanceRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduFormTemplateTargetService : IService<EduFormTemplateTargetDto, EduFormTemplateTarget>
	{
	}


	public partial class EduFormTemplateTargetService : Service<EduFormTemplateTargetDto, EduFormTemplateTarget>, IEduFormTemplateTargetService
	{
		public EduFormTemplateTargetService(IEduFormTemplateTargetAssembler assembler, IEduFormTemplateTargetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduFormTemplateListService : IService<EduFormTemplateListDto, EduFormTemplateList>
	{
	}


	public partial class EduFormTemplateListService : Service<EduFormTemplateListDto, EduFormTemplateList>, IEduFormTemplateListService
	{
		public EduFormTemplateListService(IEduFormTemplateListAssembler assembler, IEduFormTemplateListRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduStopService : IService<EduStopDto, EduStop>
	{
	}


	public partial class EduStopService : Service<EduStopDto, EduStop>, IEduStopService
	{
		public EduStopService(IEduStopAssembler assembler, IEduStopRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTermService : IService<EduTermDto, EduTerm>
	{
	}


	public partial class EduTermService : Service<EduTermDto, EduTerm>, IEduTermService
	{
		public EduTermService(IEduTermAssembler assembler, IEduTermRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_ExpireFormInstanceService : IService<V_ExpireFormInstanceDto, V_ExpireFormInstance>
	{
	}


	public partial class V_ExpireFormInstanceService : Service<V_ExpireFormInstanceDto, V_ExpireFormInstance>, IV_ExpireFormInstanceService
	{
		public V_ExpireFormInstanceService(IV_ExpireFormInstanceAssembler assembler, IV_ExpireFormInstanceRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTeacherTypeService : IService<EduTeacherTypeDto, EduTeacherType>
	{
	}


	public partial class EduTeacherTypeService : Service<EduTeacherTypeDto, EduTeacherType>, IEduTeacherTypeService
	{
		public EduTeacherTypeService(IEduTeacherTypeAssembler assembler, IEduTeacherTypeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduRefTeacherService : IService<EduRefTeacherDto, EduRefTeacher>
	{
	}


	public partial class EduRefTeacherService : Service<EduRefTeacherDto, EduRefTeacher>, IEduRefTeacherService
	{
		public EduRefTeacherService(IEduRefTeacherAssembler assembler, IEduRefTeacherRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_CodeRefService : IService<V_CodeRefDto, V_CodeRef>
	{
	}


	public partial class V_CodeRefService : Service<V_CodeRefDto, V_CodeRef>, IV_CodeRefService
	{
		public V_CodeRefService(IV_CodeRefAssembler assembler, IV_CodeRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduActTargetService : IService<EduActTargetDto, EduActTarget>
	{
	}


	public partial class EduActTargetService : Service<EduActTargetDto, EduActTarget>, IEduActTargetService
	{
		public EduActTargetService(IEduActTargetAssembler assembler, IEduActTargetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_departmentService : IService<V_departmentDto, V_department>
	{
	}


	public partial class V_departmentService : Service<V_departmentDto, V_department>, IV_departmentService
	{
		public V_departmentService(IV_departmentAssembler assembler, IV_departmentRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_kmujobService : IService<V_kmujobDto, V_kmujob>
	{
	}


	public partial class V_kmujobService : Service<V_kmujobDto, V_kmujob>, IV_kmujobService
	{
		public V_kmujobService(IV_kmujobAssembler assembler, IV_kmujobRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduStopActAttachmentService : IService<EduStopActAttachmentDto, EduStopActAttachment>
	{
	}


	public partial class EduStopActAttachmentService : Service<EduStopActAttachmentDto, EduStopActAttachment>, IEduStopActAttachmentService
	{
		public EduStopActAttachmentService(IEduStopActAttachmentAssembler assembler, IEduStopActAttachmentRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_MemeberRundownService : IService<V_MemeberRundownDto, V_MemeberRundown>
	{
	}


	public partial class V_MemeberRundownService : Service<V_MemeberRundownDto, V_MemeberRundown>, IV_MemeberRundownService
	{
		public V_MemeberRundownService(IV_MemeberRundownAssembler assembler, IV_MemeberRundownRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IAutoEduFormTemplateTargetService : IService<AutoEduFormTemplateTargetDto, AutoEduFormTemplateTarget>
	{
	}


	public partial class AutoEduFormTemplateTargetService : Service<AutoEduFormTemplateTargetDto, AutoEduFormTemplateTarget>, IAutoEduFormTemplateTargetService
	{
		public AutoEduFormTemplateTargetService(IAutoEduFormTemplateTargetAssembler assembler, IAutoEduFormTemplateTargetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IAutoEduFormTemplateListService : IService<AutoEduFormTemplateListDto, AutoEduFormTemplateList>
	{
	}


	public partial class AutoEduFormTemplateListService : Service<AutoEduFormTemplateListDto, AutoEduFormTemplateList>, IAutoEduFormTemplateListService
	{
		public AutoEduFormTemplateListService(IAutoEduFormTemplateListAssembler assembler, IAutoEduFormTemplateListRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IJobFormSettingService : IService<JobFormSettingDto, JobFormSetting>
	{
	}


	public partial class JobFormSettingService : Service<JobFormSettingDto, JobFormSetting>, IJobFormSettingService
	{
		public JobFormSettingService(IJobFormSettingAssembler assembler, IJobFormSettingRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ISchedulerLogService : IService<SchedulerLogDto, SchedulerLog>
	{
	}


	public partial class SchedulerLogService : Service<SchedulerLogDto, SchedulerLog>, ISchedulerLogService
	{
		public SchedulerLogService(ISchedulerLogAssembler assembler, ISchedulerLogRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface INews_AttachmentService : IService<News_AttachmentDto, News_Attachment>
	{
	}


	public partial class News_AttachmentService : Service<News_AttachmentDto, News_Attachment>, INews_AttachmentService
	{
		public News_AttachmentService(INews_AttachmentAssembler assembler, INews_AttachmentRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface INewsService : IService<NewsDto, News>
	{
	}


	public partial class NewsService : Service<NewsDto, News>, INewsService
	{
		public NewsService(INewsAssembler assembler, INewsRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduActTypeService : IService<EduActTypeDto, EduActType>
	{
	}


	public partial class EduActTypeService : Service<EduActTypeDto, EduActType>, IEduActTypeService
	{
		public EduActTypeService(IEduActTypeAssembler assembler, IEduActTypeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_INSTANCE_ATTACHMENTService : IService<FORM_INSTANCE_ATTACHMENTDto, FORM_INSTANCE_ATTACHMENT>
	{
	}


	public partial class FORM_INSTANCE_ATTACHMENTService : Service<FORM_INSTANCE_ATTACHMENTDto, FORM_INSTANCE_ATTACHMENT>, IFORM_INSTANCE_ATTACHMENTService
	{
		public FORM_INSTANCE_ATTACHMENTService(IFORM_INSTANCE_ATTACHMENTAssembler assembler, IFORM_INSTANCE_ATTACHMENTRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduActViewTargetService : IService<EduActViewTargetDto, EduActViewTarget>
	{
	}


	public partial class EduActViewTargetService : Service<EduActViewTargetDto, EduActViewTarget>, IEduActViewTargetService
	{
		public EduActViewTargetService(IEduActViewTargetAssembler assembler, IEduActViewTargetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduMenuService : IService<EduMenuDto, EduMenu>
	{
	}


	public partial class EduMenuService : Service<EduMenuDto, EduMenu>, IEduMenuService
	{
		public EduMenuService(IEduMenuAssembler assembler, IEduMenuRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IAuthRoleService : IService<AuthRoleDto, AuthRole>
	{
	}


	public partial class AuthRoleService : Service<AuthRoleDto, AuthRole>, IAuthRoleService
	{
		public AuthRoleService(IAuthRoleAssembler assembler, IAuthRoleRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IAuthMenuService : IService<AuthMenuDto, AuthMenu>
	{
	}


	public partial class AuthMenuService : Service<AuthMenuDto, AuthMenu>, IAuthMenuService
	{
		public AuthMenuService(IAuthMenuAssembler assembler, IAuthMenuRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IAccountRoleService : IService<AccountRoleDto, AccountRole>
	{
	}


	public partial class AccountRoleService : Service<AccountRoleDto, AccountRole>, IAccountRoleService
	{
		public AccountRoleService(IAccountRoleAssembler assembler, IAccountRoleRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_KmuEmpService : IService<V_KmuEmpDto, V_KmuEmp>
	{
	}


	public partial class V_KmuEmpService : Service<V_KmuEmpDto, V_KmuEmp>, IV_KmuEmpService
	{
		public V_KmuEmpService(IV_KmuEmpAssembler assembler, IV_KmuEmpRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_INSTANCEService : IService<FORM_INSTANCEDto, FORM_INSTANCE>
	{
	}


	public partial class FORM_INSTANCEService : Service<FORM_INSTANCEDto, FORM_INSTANCE>, IFORM_INSTANCEService
	{
		public FORM_INSTANCEService(IFORM_INSTANCEAssembler assembler, IFORM_INSTANCERepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_INSTANCE_TARGETService : IService<FORM_INSTANCE_TARGETDto, FORM_INSTANCE_TARGET>
	{
	}


	public partial class FORM_INSTANCE_TARGETService : Service<FORM_INSTANCE_TARGETDto, FORM_INSTANCE_TARGET>, IFORM_INSTANCE_TARGETService
	{
		public FORM_INSTANCE_TARGETService(IFORM_INSTANCE_TARGETAssembler assembler, IFORM_INSTANCE_TARGETRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_TEMPLATEService : IService<FORM_TEMPLATEDto, FORM_TEMPLATE>
	{
	}


	public partial class FORM_TEMPLATEService : Service<FORM_TEMPLATEDto, FORM_TEMPLATE>, IFORM_TEMPLATEService
	{
		public FORM_TEMPLATEService(IFORM_TEMPLATEAssembler assembler, IFORM_TEMPLATERepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IMessageBoardService : IService<MessageBoardDto, MessageBoard>
	{
	}


	public partial class MessageBoardService : Service<MessageBoardDto, MessageBoard>, IMessageBoardService
	{
		public MessageBoardService(IMessageBoardAssembler assembler, IMessageBoardRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IAutoEduFormTemplateExceptService : IService<AutoEduFormTemplateExceptDto, AutoEduFormTemplateExcept>
	{
	}


	public partial class AutoEduFormTemplateExceptService : Service<AutoEduFormTemplateExceptDto, AutoEduFormTemplateExcept>, IAutoEduFormTemplateExceptService
	{
		public AutoEduFormTemplateExceptService(IAutoEduFormTemplateExceptAssembler assembler, IAutoEduFormTemplateExceptRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_TEMPLATE_ELEMENTService : IService<FORM_TEMPLATE_ELEMENTDto, FORM_TEMPLATE_ELEMENT>
	{
	}


	public partial class FORM_TEMPLATE_ELEMENTService : Service<FORM_TEMPLATE_ELEMENTDto, FORM_TEMPLATE_ELEMENT>, IFORM_TEMPLATE_ELEMENTService
	{
		public FORM_TEMPLATE_ELEMENTService(IFORM_TEMPLATE_ELEMENTAssembler assembler, IFORM_TEMPLATE_ELEMENTRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_INSTANCE_ELEMENTService : IService<FORM_INSTANCE_ELEMENTDto, FORM_INSTANCE_ELEMENT>
	{
	}


	public partial class FORM_INSTANCE_ELEMENTService : Service<FORM_INSTANCE_ELEMENTDto, FORM_INSTANCE_ELEMENT>, IFORM_INSTANCE_ELEMENTService
	{
		public FORM_INSTANCE_ELEMENTService(IFORM_INSTANCE_ELEMENTAssembler assembler, IFORM_INSTANCE_ELEMENTRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduFormStasticPermissionService : IService<EduFormStasticPermissionDto, EduFormStasticPermission>
	{
	}


	public partial class EduFormStasticPermissionService : Service<EduFormStasticPermissionDto, EduFormStasticPermission>, IEduFormStasticPermissionService
	{
		public EduFormStasticPermissionService(IEduFormStasticPermissionAssembler assembler, IEduFormStasticPermissionRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IDepSecDatumService : IService<DepSecDatumDto, DepSecDatum>
	{
	}


	public partial class DepSecDatumService : Service<DepSecDatumDto, DepSecDatum>, IDepSecDatumService
	{
		public DepSecDatumService(IDepSecDatumAssembler assembler, IDepSecDatumRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachTimeTypeService : IService<TeachTimeTypeDto, TeachTimeType>
	{
	}


	public partial class TeachTimeTypeService : Service<TeachTimeTypeDto, TeachTimeType>, ITeachTimeTypeService
	{
		public TeachTimeTypeService(ITeachTimeTypeAssembler assembler, ITeachTimeTypeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachTimeRateService : IService<TeachTimeRateDto, TeachTimeRate>
	{
	}


	public partial class TeachTimeRateService : Service<TeachTimeRateDto, TeachTimeRate>, ITeachTimeRateService
	{
		public TeachTimeRateService(ITeachTimeRateAssembler assembler, ITeachTimeRateRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface INewsViewTargetService : IService<NewsViewTargetDto, NewsViewTarget>
	{
	}


	public partial class NewsViewTargetService : Service<NewsViewTargetDto, NewsViewTarget>, INewsViewTargetService
	{
		public NewsViewTargetService(INewsViewTargetAssembler assembler, INewsViewTargetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IHealTeachTimeService : IService<HealTeachTimeDto, HealTeachTime>
	{
	}


	public partial class HealTeachTimeService : Service<HealTeachTimeDto, HealTeachTime>, IHealTeachTimeService
	{
		public HealTeachTimeService(IHealTeachTimeAssembler assembler, IHealTeachTimeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IScoreSettingJobService : IService<ScoreSettingJobDto, ScoreSettingJob>
	{
	}


	public partial class ScoreSettingJobService : Service<ScoreSettingJobDto, ScoreSettingJob>, IScoreSettingJobService
	{
		public ScoreSettingJobService(IScoreSettingJobAssembler assembler, IScoreSettingJobRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IScoreSettingDetailService : IService<ScoreSettingDetailDto, ScoreSettingDetail>
	{
	}


	public partial class ScoreSettingDetailService : Service<ScoreSettingDetailDto, ScoreSettingDetail>, IScoreSettingDetailService
	{
		public ScoreSettingDetailService(IScoreSettingDetailAssembler assembler, IScoreSettingDetailRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IScoreSettingService : IService<ScoreSettingDto, ScoreSetting>
	{
	}


	public partial class ScoreSettingService : Service<ScoreSettingDto, ScoreSetting>, IScoreSettingService
	{
		public ScoreSettingService(IScoreSettingAssembler assembler, IScoreSettingRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IScoreInstanceDetailService : IService<ScoreInstanceDetailDto, ScoreInstanceDetail>
	{
	}


	public partial class ScoreInstanceDetailService : Service<ScoreInstanceDetailDto, ScoreInstanceDetail>, IScoreInstanceDetailService
	{
		public ScoreInstanceDetailService(IScoreInstanceDetailAssembler assembler, IScoreInstanceDetailRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IScoreInstanceService : IService<ScoreInstanceDto, ScoreInstance>
	{
	}


	public partial class ScoreInstanceService : Service<ScoreInstanceDto, ScoreInstance>, IScoreInstanceService
	{
		public ScoreInstanceService(IScoreInstanceAssembler assembler, IScoreInstanceRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IHealTeachTimeRateService : IService<HealTeachTimeRateDto, HealTeachTimeRate>
	{
	}


	public partial class HealTeachTimeRateService : Service<HealTeachTimeRateDto, HealTeachTimeRate>, IHealTeachTimeRateService
	{
		public HealTeachTimeRateService(IHealTeachTimeRateAssembler assembler, IHealTeachTimeRateRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduActTypeRefService : IService<EduActTypeRefDto, EduActTypeRef>
	{
	}


	public partial class EduActTypeRefService : Service<EduActTypeRefDto, EduActTypeRef>, IEduActTypeRefService
	{
		public EduActTypeRefService(IEduActTypeRefAssembler assembler, IEduActTypeRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduActBookingService : IService<EduActBookingDto, EduActBooking>
	{
	}


	public partial class EduActBookingService : Service<EduActBookingDto, EduActBooking>, IEduActBookingService
	{
		public EduActBookingService(IEduActBookingAssembler assembler, IEduActBookingRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IElearningItemService : IService<ElearningItemDto, ElearningItem>
	{
	}


	public partial class ElearningItemService : Service<ElearningItemDto, ElearningItem>, IElearningItemService
	{
		public ElearningItemService(IElearningItemAssembler assembler, IElearningItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IElearningEmpItemLogService : IService<ElearningEmpItemLogDto, ElearningEmpItemLog>
	{
	}


	public partial class ElearningEmpItemLogService : Service<ElearningEmpItemLogDto, ElearningEmpItemLog>, IElearningEmpItemLogService
	{
		public ElearningEmpItemLogService(IElearningEmpItemLogAssembler assembler, IElearningEmpItemLogRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IElearningEmpItemService : IService<ElearningEmpItemDto, ElearningEmpItem>
	{
	}


	public partial class ElearningEmpItemService : Service<ElearningEmpItemDto, ElearningEmpItem>, IElearningEmpItemService
	{
		public ElearningEmpItemService(IElearningEmpItemAssembler assembler, IElearningEmpItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IElearningClassService : IService<ElearningClassDto, ElearningClass>
	{
	}


	public partial class ElearningClassService : Service<ElearningClassDto, ElearningClass>, IElearningClassService
	{
		public ElearningClassService(IElearningClassAssembler assembler, IElearningClassRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IElearningBookingService : IService<ElearningBookingDto, ElearningBooking>
	{
	}


	public partial class ElearningBookingService : Service<ElearningBookingDto, ElearningBooking>, IElearningBookingService
	{
		public ElearningBookingService(IElearningBookingAssembler assembler, IElearningBookingRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IPassPortStudentApplicationItemService : IService<PassPortStudentApplicationItemDto, PassPortStudentApplicationItem>
	{
	}


	public partial class PassPortStudentApplicationItemService : Service<PassPortStudentApplicationItemDto, PassPortStudentApplicationItem>, IPassPortStudentApplicationItemService
	{
		public PassPortStudentApplicationItemService(IPassPortStudentApplicationItemAssembler assembler, IPassPortStudentApplicationItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IPassPortJobTitleItemService : IService<PassPortJobTitleItemDto, PassPortJobTitleItem>
	{
	}


	public partial class PassPortJobTitleItemService : Service<PassPortJobTitleItemDto, PassPortJobTitleItem>, IPassPortJobTitleItemService
	{
		public PassPortJobTitleItemService(IPassPortJobTitleItemAssembler assembler, IPassPortJobTitleItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IPassPortCheckItemService : IService<PassPortCheckItemDto, PassPortCheckItem>
	{
	}


	public partial class PassPortCheckItemService : Service<PassPortCheckItemDto, PassPortCheckItem>, IPassPortCheckItemService
	{
		public PassPortCheckItemService(IPassPortCheckItemAssembler assembler, IPassPortCheckItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IPassPortSpecialListService : IService<PassPortSpecialListDto, PassPortSpecialList>
	{
	}


	public partial class PassPortSpecialListService : Service<PassPortSpecialListDto, PassPortSpecialList>, IPassPortSpecialListService
	{
		public PassPortSpecialListService(IPassPortSpecialListAssembler assembler, IPassPortSpecialListRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IVoteTargetService : IService<VoteTargetDto, VoteTarget>
	{
	}


	public partial class VoteTargetService : Service<VoteTargetDto, VoteTarget>, IVoteTargetService
	{
		public VoteTargetService(IVoteTargetAssembler assembler, IVoteTargetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IVoteMainService : IService<VoteMainDto, VoteMain>
	{
	}


	public partial class VoteMainService : Service<VoteMainDto, VoteMain>, IVoteMainService
	{
		public VoteMainService(IVoteMainAssembler assembler, IVoteMainRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IVoteJobService : IService<VoteJobDto, VoteJob>
	{
	}


	public partial class VoteJobService : Service<VoteJobDto, VoteJob>, IVoteJobService
	{
		public VoteJobService(IVoteJobAssembler assembler, IVoteJobRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IVoteInstanceService : IService<VoteInstanceDto, VoteInstance>
	{
	}


	public partial class VoteInstanceService : Service<VoteInstanceDto, VoteInstance>, IVoteInstanceService
	{
		public VoteInstanceService(IVoteInstanceAssembler assembler, IVoteInstanceRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IVoteInsDetService : IService<VoteInsDetDto, VoteInsDet>
	{
	}


	public partial class VoteInsDetService : Service<VoteInsDetDto, VoteInsDet>, IVoteInsDetService
	{
		public VoteInsDetService(IVoteInsDetAssembler assembler, IVoteInsDetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IVoteGroupService : IService<VoteGroupDto, VoteGroup>
	{
	}


	public partial class VoteGroupService : Service<VoteGroupDto, VoteGroup>, IVoteGroupService
	{
		public VoteGroupService(IVoteGroupAssembler assembler, IVoteGroupRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IVoteGCondService : IService<VoteGCondDto, VoteGCond>
	{
	}


	public partial class VoteGCondService : Service<VoteGCondDto, VoteGCond>, IVoteGCondService
	{
		public VoteGCondService(IVoteGCondAssembler assembler, IVoteGCondRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IVoteUserDefineListService : IService<VoteUserDefineListDto, VoteUserDefineList>
	{
	}


	public partial class VoteUserDefineListService : Service<VoteUserDefineListDto, VoteUserDefineList>, IVoteUserDefineListService
	{
		public VoteUserDefineListService(IVoteUserDefineListAssembler assembler, IVoteUserDefineListRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IPassPortStudentApplicationItemFailLogService : IService<PassPortStudentApplicationItemFailLogDto, PassPortStudentApplicationItemFailLog>
	{
	}


	public partial class PassPortStudentApplicationItemFailLogService : Service<PassPortStudentApplicationItemFailLogDto, PassPortStudentApplicationItemFailLog>, IPassPortStudentApplicationItemFailLogService
	{
		public PassPortStudentApplicationItemFailLogService(IPassPortStudentApplicationItemFailLogAssembler assembler, IPassPortStudentApplicationItemFailLogRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IPassPortJobFinalManService : IService<PassPortJobFinalManDto, PassPortJobFinalMan>
	{
	}


	public partial class PassPortJobFinalManService : Service<PassPortJobFinalManDto, PassPortJobFinalMan>, IPassPortJobFinalManService
	{
		public PassPortJobFinalManService(IPassPortJobFinalManAssembler assembler, IPassPortJobFinalManRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IPassPortDocGradeService : IService<PassPortDocGradeDto, PassPortDocGrade>
	{
	}


	public partial class PassPortDocGradeService : Service<PassPortDocGradeDto, PassPortDocGrade>, IPassPortDocGradeService
	{
		public PassPortDocGradeService(IPassPortDocGradeAssembler assembler, IPassPortDocGradeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportTemplateTargetService : IService<EduPassportTemplateTargetDto, EduPassportTemplateTarget>
	{
	}


	public partial class EduPassportTemplateTargetService : Service<EduPassportTemplateTargetDto, EduPassportTemplateTarget>, IEduPassportTemplateTargetService
	{
		public EduPassportTemplateTargetService(IEduPassportTemplateTargetAssembler assembler, IEduPassportTemplateTargetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportTemplateItemService : IService<EduPassportTemplateItemDto, EduPassportTemplateItem>
	{
	}


	public partial class EduPassportTemplateItemService : Service<EduPassportTemplateItemDto, EduPassportTemplateItem>, IEduPassportTemplateItemService
	{
		public EduPassportTemplateItemService(IEduPassportTemplateItemAssembler assembler, IEduPassportTemplateItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportTemplateService : IService<EduPassportTemplateDto, EduPassportTemplate>
	{
	}


	public partial class EduPassportTemplateService : Service<EduPassportTemplateDto, EduPassportTemplate>, IEduPassportTemplateService
	{
		public EduPassportTemplateService(IEduPassportTemplateAssembler assembler, IEduPassportTemplateRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportItemDetService : IService<EduPassportItemDetDto, EduPassportItemDet>
	{
	}


	public partial class EduPassportItemDetService : Service<EduPassportItemDetDto, EduPassportItemDet>, IEduPassportItemDetService
	{
		public EduPassportItemDetService(IEduPassportItemDetAssembler assembler, IEduPassportItemDetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportItemTargetService : IService<EduPassportItemTargetDto, EduPassportItemTarget>
	{
	}


	public partial class EduPassportItemTargetService : Service<EduPassportItemTargetDto, EduPassportItemTarget>, IEduPassportItemTargetService
	{
		public EduPassportItemTargetService(IEduPassportItemTargetAssembler assembler, IEduPassportItemTargetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportItemService : IService<EduPassportItemDto, EduPassportItem>
	{
	}


	public partial class EduPassportItemService : Service<EduPassportItemDto, EduPassportItem>, IEduPassportItemService
	{
		public EduPassportItemService(IEduPassportItemAssembler assembler, IEduPassportItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportInstanceService : IService<EduPassportInstanceDto, EduPassportInstance>
	{
	}


	public partial class EduPassportInstanceService : Service<EduPassportInstanceDto, EduPassportInstance>, IEduPassportInstanceService
	{
		public EduPassportInstanceService(IEduPassportInstanceAssembler assembler, IEduPassportInstanceRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportInsItemDetService : IService<EduPassportInsItemDetDto, EduPassportInsItemDet>
	{
	}


	public partial class EduPassportInsItemDetService : Service<EduPassportInsItemDetDto, EduPassportInsItemDet>, IEduPassportInsItemDetService
	{
		public EduPassportInsItemDetService(IEduPassportInsItemDetAssembler assembler, IEduPassportInsItemDetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportInsItemService : IService<EduPassportInsItemDto, EduPassportInsItem>
	{
	}


	public partial class EduPassportInsItemService : Service<EduPassportInsItemDto, EduPassportInsItem>, IEduPassportInsItemService
	{
		public EduPassportInsItemService(IEduPassportInsItemAssembler assembler, IEduPassportInsItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_INSTANCE_TRANSLOGService : IService<FORM_INSTANCE_TRANSLOGDto, FORM_INSTANCE_TRANSLOG>
	{
	}


	public partial class FORM_INSTANCE_TRANSLOGService : Service<FORM_INSTANCE_TRANSLOGDto, FORM_INSTANCE_TRANSLOG>, IFORM_INSTANCE_TRANSLOGService
	{
		public FORM_INSTANCE_TRANSLOGService(IFORM_INSTANCE_TRANSLOGAssembler assembler, IFORM_INSTANCE_TRANSLOGRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportPRefService : IService<EduPassportPRefDto, EduPassportPRef>
	{
	}


	public partial class EduPassportPRefService : Service<EduPassportPRefDto, EduPassportPRef>, IEduPassportPRefService
	{
		public EduPassportPRefService(IEduPassportPRefAssembler assembler, IEduPassportPRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduPassportInsItemRejectHiService : IService<EduPassportInsItemRejectHiDto, EduPassportInsItemRejectHi>
	{
	}


	public partial class EduPassportInsItemRejectHiService : Service<EduPassportInsItemRejectHiDto, EduPassportInsItemRejectHi>, IEduPassportInsItemRejectHiService
	{
		public EduPassportInsItemRejectHiService(IEduPassportInsItemRejectHiAssembler assembler, IEduPassportInsItemRejectHiRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_TEMPLATE_GROUPService : IService<FORM_TEMPLATE_GROUPDto, FORM_TEMPLATE_GROUP>
	{
	}


	public partial class FORM_TEMPLATE_GROUPService : Service<FORM_TEMPLATE_GROUPDto, FORM_TEMPLATE_GROUP>, IFORM_TEMPLATE_GROUPService
	{
		public FORM_TEMPLATE_GROUPService(IFORM_TEMPLATE_GROUPAssembler assembler, IFORM_TEMPLATE_GROUPRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IScoreSettingScoreTypeService : IService<ScoreSettingScoreTypeDto, ScoreSettingScoreType>
	{
	}


	public partial class ScoreSettingScoreTypeService : Service<ScoreSettingScoreTypeDto, ScoreSettingScoreType>, IScoreSettingScoreTypeService
	{
		public ScoreSettingScoreTypeService(IScoreSettingScoreTypeAssembler assembler, IScoreSettingScoreTypeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachPointRefService : IService<TeachPointRefDto, TeachPointRef>
	{
	}


	public partial class TeachPointRefService : Service<TeachPointRefDto, TeachPointRef>, ITeachPointRefService
	{
		public TeachPointRefService(ITeachPointRefAssembler assembler, ITeachPointRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachPointItemRequireService : IService<TeachPointItemRequireDto, TeachPointItemRequire>
	{
	}


	public partial class TeachPointItemRequireService : Service<TeachPointItemRequireDto, TeachPointItemRequire>, ITeachPointItemRequireService
	{
		public TeachPointItemRequireService(ITeachPointItemRequireAssembler assembler, ITeachPointItemRequireRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachPointItemService : IService<TeachPointItemDto, TeachPointItem>
	{
	}


	public partial class TeachPointItemService : Service<TeachPointItemDto, TeachPointItem>, ITeachPointItemService
	{
		public TeachPointItemService(ITeachPointItemAssembler assembler, ITeachPointItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachPointEmpItemDatumService : IService<TeachPointEmpItemDatumDto, TeachPointEmpItemDatum>
	{
	}


	public partial class TeachPointEmpItemDatumService : Service<TeachPointEmpItemDatumDto, TeachPointEmpItemDatum>, ITeachPointEmpItemDatumService
	{
		public TeachPointEmpItemDatumService(ITeachPointEmpItemDatumAssembler assembler, ITeachPointEmpItemDatumRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachPointCalcTypeRefService : IService<TeachPointCalcTypeRefDto, TeachPointCalcTypeRef>
	{
	}


	public partial class TeachPointCalcTypeRefService : Service<TeachPointCalcTypeRefDto, TeachPointCalcTypeRef>, ITeachPointCalcTypeRefService
	{
		public TeachPointCalcTypeRefService(ITeachPointCalcTypeRefAssembler assembler, ITeachPointCalcTypeRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachPointCalcTypeService : IService<TeachPointCalcTypeDto, TeachPointCalcType>
	{
	}


	public partial class TeachPointCalcTypeService : Service<TeachPointCalcTypeDto, TeachPointCalcType>, ITeachPointCalcTypeService
	{
		public TeachPointCalcTypeService(ITeachPointCalcTypeAssembler assembler, ITeachPointCalcTypeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IMyListDetService : IService<MyListDetDto, MyListDet>
	{
	}


	public partial class MyListDetService : Service<MyListDetDto, MyListDet>, IMyListDetService
	{
		public MyListDetService(IMyListDetAssembler assembler, IMyListDetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IMyListService : IService<MyListDto, MyList>
	{
	}


	public partial class MyListService : Service<MyListDto, MyList>, IMyListService
	{
		public MyListService(IMyListAssembler assembler, IMyListRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IRecordTemplateService : IService<RecordTemplateDto, RecordTemplate>
	{
	}


	public partial class RecordTemplateService : Service<RecordTemplateDto, RecordTemplate>, IRecordTemplateService
	{
		public RecordTemplateService(IRecordTemplateAssembler assembler, IRecordTemplateRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IRecordInstanceService : IService<RecordInstanceDto, RecordInstance>
	{
	}


	public partial class RecordInstanceService : Service<RecordInstanceDto, RecordInstance>, IRecordInstanceService
	{
		public RecordInstanceService(IRecordInstanceAssembler assembler, IRecordInstanceRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IRecordInsDetService : IService<RecordInsDetDto, RecordInsDet>
	{
	}


	public partial class RecordInsDetService : Service<RecordInsDetDto, RecordInsDet>, IRecordInsDetService
	{
		public RecordInsDetService(IRecordInsDetAssembler assembler, IRecordInsDetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IRecordInsSignInService : IService<RecordInsSignInDto, RecordInsSignIn>
	{
	}


	public partial class RecordInsSignInService : Service<RecordInsSignInDto, RecordInsSignIn>, IRecordInsSignInService
	{
		public RecordInsSignInService(IRecordInsSignInAssembler assembler, IRecordInsSignInRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IRecordEduActRefService : IService<RecordEduActRefDto, RecordEduActRef>
	{
	}


	public partial class RecordEduActRefService : Service<RecordEduActRefDto, RecordEduActRef>, IRecordEduActRefService
	{
		public RecordEduActRefService(IRecordEduActRefAssembler assembler, IRecordEduActRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduQuestionService : IService<EduQuestionDto, EduQuestion>
	{
	}


	public partial class EduQuestionService : Service<EduQuestionDto, EduQuestion>, IEduQuestionService
	{
		public EduQuestionService(IEduQuestionAssembler assembler, IEduQuestionRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ILoginLogService : IService<LoginLogDto, LoginLog>
	{
	}


	public partial class LoginLogService : Service<LoginLogDto, LoginLog>, ILoginLogService
	{
		public LoginLogService(ILoginLogAssembler assembler, ILoginLogRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachPointJobItemService : IService<TeachPointJobItemDto, TeachPointJobItem>
	{
	}


	public partial class TeachPointJobItemService : Service<TeachPointJobItemDto, TeachPointJobItem>, ITeachPointJobItemService
	{
		public TeachPointJobItemService(ITeachPointJobItemAssembler assembler, ITeachPointJobItemRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITrainingTimeService : IService<TrainingTimeDto, TrainingTime>
	{
	}


	public partial class TrainingTimeService : Service<TrainingTimeDto, TrainingTime>, ITrainingTimeService
	{
		public TrainingTimeService(ITrainingTimeAssembler assembler, ITrainingTimeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduActTypeRoleRefService : IService<EduActTypeRoleRefDto, EduActTypeRoleRef>
	{
	}


	public partial class EduActTypeRoleRefService : Service<EduActTypeRoleRefDto, EduActTypeRoleRef>, IEduActTypeRoleRefService
	{
		public EduActTypeRoleRefService(IEduActTypeRoleRefAssembler assembler, IEduActTypeRoleRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IOSCECertService : IService<OSCECertDto, OSCECert>
	{
	}


	public partial class OSCECertService : Service<OSCECertDto, OSCECert>, IOSCECertService
	{
		public OSCECertService(IOSCECertAssembler assembler, IOSCECertRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IOSCEBlockTimeService : IService<OSCEBlockTimeDto, OSCEBlockTime>
	{
	}


	public partial class OSCEBlockTimeService : Service<OSCEBlockTimeDto, OSCEBlockTime>, IOSCEBlockTimeService
	{
		public OSCEBlockTimeService(IOSCEBlockTimeAssembler assembler, IOSCEBlockTimeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IRecordInstanceRejectLogService : IService<RecordInstanceRejectLogDto, RecordInstanceRejectLog>
	{
	}


	public partial class RecordInstanceRejectLogService : Service<RecordInstanceRejectLogDto, RecordInstanceRejectLog>, IRecordInstanceRejectLogService
	{
		public RecordInstanceRejectLogService(IRecordInstanceRejectLogAssembler assembler, IRecordInstanceRejectLogRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IMonthlyTeachPointCalcDatumService : IService<MonthlyTeachPointCalcDatumDto, MonthlyTeachPointCalcDatum>
	{
	}


	public partial class MonthlyTeachPointCalcDatumService : Service<MonthlyTeachPointCalcDatumDto, MonthlyTeachPointCalcDatum>, IMonthlyTeachPointCalcDatumService
	{
		public MonthlyTeachPointCalcDatumService(IMonthlyTeachPointCalcDatumAssembler assembler, IMonthlyTeachPointCalcDatumRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFormCategoryRefService : IService<FormCategoryRefDto, FormCategoryRef>
	{
	}


	public partial class FormCategoryRefService : Service<FormCategoryRefDto, FormCategoryRef>, IFormCategoryRefService
	{
		public FormCategoryRefService(IFormCategoryRefAssembler assembler, IFormCategoryRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFormCategoryService : IService<FormCategoryDto, FormCategory>
	{
	}


	public partial class FormCategoryService : Service<FormCategoryDto, FormCategory>, IFormCategoryService
	{
		public FormCategoryService(IFormCategoryAssembler assembler, IFormCategoryRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_INSTANCE_RETURN_LOGService : IService<FORM_INSTANCE_RETURN_LOGDto, FORM_INSTANCE_RETURN_LOG>
	{
	}


	public partial class FORM_INSTANCE_RETURN_LOGService : Service<FORM_INSTANCE_RETURN_LOGDto, FORM_INSTANCE_RETURN_LOG>, IFORM_INSTANCE_RETURN_LOGService
	{
		public FORM_INSTANCE_RETURN_LOGService(IFORM_INSTANCE_RETURN_LOGAssembler assembler, IFORM_INSTANCE_RETURN_LOGRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTermFormReqTemplateDetService : IService<EduTermFormReqTemplateDetDto, EduTermFormReqTemplateDet>
	{
	}


	public partial class EduTermFormReqTemplateDetService : Service<EduTermFormReqTemplateDetDto, EduTermFormReqTemplateDet>, IEduTermFormReqTemplateDetService
	{
		public EduTermFormReqTemplateDetService(IEduTermFormReqTemplateDetAssembler assembler, IEduTermFormReqTemplateDetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTermFormReqTemplateService : IService<EduTermFormReqTemplateDto, EduTermFormReqTemplate>
	{
	}


	public partial class EduTermFormReqTemplateService : Service<EduTermFormReqTemplateDto, EduTermFormReqTemplate>, IEduTermFormReqTemplateService
	{
		public EduTermFormReqTemplateService(IEduTermFormReqTemplateAssembler assembler, IEduTermFormReqTemplateRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduTermFormReqService : IService<EduTermFormReqDto, EduTermFormReq>
	{
	}


	public partial class EduTermFormReqService : Service<EduTermFormReqDto, EduTermFormReq>, IEduTermFormReqService
	{
		public EduTermFormReqService(IEduTermFormReqAssembler assembler, IEduTermFormReqRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IRecordInsReaderService : IService<RecordInsReaderDto, RecordInsReader>
	{
	}


	public partial class RecordInsReaderService : Service<RecordInsReaderDto, RecordInsReader>, IRecordInsReaderService
	{
		public RecordInsReaderService(IRecordInsReaderAssembler assembler, IRecordInsReaderRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IRecordInsViewerService : IService<RecordInsViewerDto, RecordInsViewer>
	{
	}


	public partial class RecordInsViewerService : Service<RecordInsViewerDto, RecordInsViewer>, IRecordInsViewerService
	{
		public RecordInsViewerService(IRecordInsViewerAssembler assembler, IRecordInsViewerRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_MenuService : IService<IKASA_MenuDto, IKASA_Menu>
	{
	}


	public partial class IKASA_MenuService : Service<IKASA_MenuDto, IKASA_Menu>, IIKASA_MenuService
	{
		public IKASA_MenuService(IIKASA_MenuAssembler assembler, IIKASA_MenuRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_MenuParamService : IService<IKASA_MenuParamDto, IKASA_MenuParam>
	{
	}


	public partial class IKASA_MenuParamService : Service<IKASA_MenuParamDto, IKASA_MenuParam>, IIKASA_MenuParamService
	{
		public IKASA_MenuParamService(IIKASA_MenuParamAssembler assembler, IIKASA_MenuParamRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_OSCEExamStageService : IService<IKASA_OSCEExamStageDto, IKASA_OSCEExamStage>
	{
	}


	public partial class IKASA_OSCEExamStageService : Service<IKASA_OSCEExamStageDto, IKASA_OSCEExamStage>, IIKASA_OSCEExamStageService
	{
		public IKASA_OSCEExamStageService(IIKASA_OSCEExamStageAssembler assembler, IIKASA_OSCEExamStageRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_OSCEExamScoreService : IService<IKASA_OSCEExamScoreDto, IKASA_OSCEExamScore>
	{
	}


	public partial class IKASA_OSCEExamScoreService : Service<IKASA_OSCEExamScoreDto, IKASA_OSCEExamScore>, IIKASA_OSCEExamScoreService
	{
		public IKASA_OSCEExamScoreService(IIKASA_OSCEExamScoreAssembler assembler, IIKASA_OSCEExamScoreRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_OSCEExamService : IService<IKASA_OSCEExamDto, IKASA_OSCEExam>
	{
	}


	public partial class IKASA_OSCEExamService : Service<IKASA_OSCEExamDto, IKASA_OSCEExam>, IIKASA_OSCEExamService
	{
		public IKASA_OSCEExamService(IIKASA_OSCEExamAssembler assembler, IIKASA_OSCEExamRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_hospService : IService<V_hospDto, V_hosp>
	{
	}


	public partial class V_hospService : Service<V_hospDto, V_hosp>, IV_hospService
	{
		public V_hospService(IV_hospAssembler assembler, IV_hospRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduScoreService : IService<EduScoreDto, EduScore>
	{
	}


	public partial class EduScoreService : Service<EduScoreDto, EduScore>, IEduScoreService
	{
		public EduScoreService(IEduScoreAssembler assembler, IEduScoreRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_IPDDataCountService : IService<IKASA_IPDDataCountDto, IKASA_IPDDataCount>
	{
	}


	public partial class IKASA_IPDDataCountService : Service<IKASA_IPDDataCountDto, IKASA_IPDDataCount>, IIKASA_IPDDataCountService
	{
		public IKASA_IPDDataCountService(IIKASA_IPDDataCountAssembler assembler, IIKASA_IPDDataCountRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IFORM_TEMPLATE_PERMISSIONService : IService<FORM_TEMPLATE_PERMISSIONDto, FORM_TEMPLATE_PERMISSION>
	{
	}


	public partial class FORM_TEMPLATE_PERMISSIONService : Service<FORM_TEMPLATE_PERMISSIONDto, FORM_TEMPLATE_PERMISSION>, IFORM_TEMPLATE_PERMISSIONService
	{
		public FORM_TEMPLATE_PERMISSIONService(IFORM_TEMPLATE_PERMISSIONAssembler assembler, IFORM_TEMPLATE_PERMISSIONRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IAccountService : IService<AccountDto, Account>
	{
	}


	public partial class AccountService : Service<AccountDto, Account>, IAccountService
	{
		public AccountService(IAccountAssembler assembler, IAccountRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_MenuRefService : IService<IKASA_MenuRefDto, IKASA_MenuRef>
	{
	}


	public partial class IKASA_MenuRefService : Service<IKASA_MenuRefDto, IKASA_MenuRef>, IIKASA_MenuRefService
	{
		public IKASA_MenuRefService(IIKASA_MenuRefAssembler assembler, IIKASA_MenuRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_ERCaseService : IService<IKASA_ERCaseDto, IKASA_ERCase>
	{
	}


	public partial class IKASA_ERCaseService : Service<IKASA_ERCaseDto, IKASA_ERCase>, IIKASA_ERCaseService
	{
		public IKASA_ERCaseService(IIKASA_ERCaseAssembler assembler, IIKASA_ERCaseRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduSentenceService : IService<EduSentenceDto, EduSentence>
	{
	}


	public partial class EduSentenceService : Service<EduSentenceDto, EduSentence>, IEduSentenceService
	{
		public EduSentenceService(IEduSentenceAssembler assembler, IEduSentenceRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_UploadFileService : IService<IKASA_UploadFileDto, IKASA_UploadFile>
	{
	}


	public partial class IKASA_UploadFileService : Service<IKASA_UploadFileDto, IKASA_UploadFile>, IIKASA_UploadFileService
	{
		public IKASA_UploadFileService(IIKASA_UploadFileAssembler assembler, IIKASA_UploadFileRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_ActUploadFileService : IService<IKASA_ActUploadFileDto, IKASA_ActUploadFile>
	{
	}


	public partial class IKASA_ActUploadFileService : Service<IKASA_ActUploadFileDto, IKASA_ActUploadFile>, IIKASA_ActUploadFileService
	{
		public IKASA_ActUploadFileService(IIKASA_ActUploadFileAssembler assembler, IIKASA_ActUploadFileRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IEduSettingService : IService<EduSettingDto, EduSetting>
	{
	}


	public partial class EduSettingService : Service<EduSettingDto, EduSetting>, IEduSettingService
	{
		public EduSettingService(IEduSettingAssembler assembler, IEduSettingRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_ERCase_EvalDetService : IService<IKASA_ERCase_EvalDetDto, IKASA_ERCase_EvalDet>
	{
	}


	public partial class IKASA_ERCase_EvalDetService : Service<IKASA_ERCase_EvalDetDto, IKASA_ERCase_EvalDet>, IIKASA_ERCase_EvalDetService
	{
		public IKASA_ERCase_EvalDetService(IIKASA_ERCase_EvalDetAssembler assembler, IIKASA_ERCase_EvalDetRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_ERCase_EvalService : IService<IKASA_ERCase_EvalDto, IKASA_ERCase_Eval>
	{
	}


	public partial class IKASA_ERCase_EvalService : Service<IKASA_ERCase_EvalDto, IKASA_ERCase_Eval>, IIKASA_ERCase_EvalService
	{
		public IKASA_ERCase_EvalService(IIKASA_ERCase_EvalAssembler assembler, IIKASA_ERCase_EvalRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IGoodVSDatumService : IService<GoodVSDatumDto, GoodVSDatum>
	{
	}


	public partial class GoodVSDatumService : Service<GoodVSDatumDto, GoodVSDatum>, IGoodVSDatumService
	{
		public GoodVSDatumService(IGoodVSDatumAssembler assembler, IGoodVSDatumRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IGoodVSDataDeService : IService<GoodVSDataDeDto, GoodVSDataDe>
	{
	}


	public partial class GoodVSDataDeService : Service<GoodVSDataDeDto, GoodVSDataDe>, IGoodVSDataDeService
	{
		public GoodVSDataDeService(IGoodVSDataDeAssembler assembler, IGoodVSDataDeRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_KPINormExtraFieldService : IService<V_KPINormExtraFieldDto, V_KPINormExtraField>
	{
	}


	public partial class V_KPINormExtraFieldService : Service<V_KPINormExtraFieldDto, V_KPINormExtraField>, IV_KPINormExtraFieldService
	{
		public V_KPINormExtraFieldService(IV_KPINormExtraFieldAssembler assembler, IV_KPINormExtraFieldRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_KPINormService : IService<V_KPINormDto, V_KPINorm>
	{
	}


	public partial class V_KPINormService : Service<V_KPINormDto, V_KPINorm>, IV_KPINormService
	{
		public V_KPINormService(IV_KPINormAssembler assembler, IV_KPINormRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface ITeachTimeKpiRefService : IService<TeachTimeKpiRefDto, TeachTimeKpiRef>
	{
	}


	public partial class TeachTimeKpiRefService : Service<TeachTimeKpiRefDto, TeachTimeKpiRef>, ITeachTimeKpiRefService
	{
		public TeachTimeKpiRefService(ITeachTimeKpiRefAssembler assembler, ITeachTimeKpiRefRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IV_KPIRoundService : IService<V_KPIRoundDto, V_KPIRound>
	{
	}


	public partial class V_KPIRoundService : Service<V_KPIRoundDto, V_KPIRound>, IV_KPIRoundService
	{
		public V_KPIRoundService(IV_KPIRoundAssembler assembler, IV_KPIRoundRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IMedicalTeachPointService : IService<MedicalTeachPointDto, MedicalTeachPoint>
	{
	}


	public partial class MedicalTeachPointService : Service<MedicalTeachPointDto, MedicalTeachPoint>, IMedicalTeachPointService
	{
		public MedicalTeachPointService(IMedicalTeachPointAssembler assembler, IMedicalTeachPointRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_ERExamService : IService<IKASA_ERExamDto, IKASA_ERExam>
	{
	}


	public partial class IKASA_ERExamService : Service<IKASA_ERExamDto, IKASA_ERExam>, IIKASA_ERExamService
	{
		public IKASA_ERExamService(IIKASA_ERExamAssembler assembler, IIKASA_ERExamRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_ERExamScoreService : IService<IKASA_ERExamScoreDto, IKASA_ERExamScore>
	{
	}


	public partial class IKASA_ERExamScoreService : Service<IKASA_ERExamScoreDto, IKASA_ERExamScore>, IIKASA_ERExamScoreService
	{
		public IKASA_ERExamScoreService(IIKASA_ERExamScoreAssembler assembler, IIKASA_ERExamScoreRepository repository)
			: base(assembler, repository)
		{
		}
	}


	public partial interface IIKASA_ERExamStageService : IService<IKASA_ERExamStageDto, IKASA_ERExamStage>
	{
	}


	public partial class IKASA_ERExamStageService : Service<IKASA_ERExamStageDto, IKASA_ERExamStage>, IIKASA_ERExamStageService
	{
		public IKASA_ERExamStageService(IIKASA_ERExamStageAssembler assembler, IIKASA_ERExamStageRepository repository)
			: base(assembler, repository)
		{
		}
	}


}
#pragma warning restore 1591
