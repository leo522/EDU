#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HtmlFormUtility
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="www_EduActivity")]
	public partial class DataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertFORM_INSTANCE_BLOCKS(FORM_INSTANCE_BLOCKS instance);
    partial void UpdateFORM_INSTANCE_BLOCKS(FORM_INSTANCE_BLOCKS instance);
    partial void DeleteFORM_INSTANCE_BLOCKS(FORM_INSTANCE_BLOCKS instance);
    partial void InsertFORM_INSTANCE_EXPRESSIONS(FORM_INSTANCE_EXPRESSIONS instance);
    partial void UpdateFORM_INSTANCE_EXPRESSIONS(FORM_INSTANCE_EXPRESSIONS instance);
    partial void DeleteFORM_INSTANCE_EXPRESSIONS(FORM_INSTANCE_EXPRESSIONS instance);
    partial void InsertFORM_TEMPLATE_IMAGES(FORM_TEMPLATE_IMAGES instance);
    partial void UpdateFORM_TEMPLATE_IMAGES(FORM_TEMPLATE_IMAGES instance);
    partial void DeleteFORM_TEMPLATE_IMAGES(FORM_TEMPLATE_IMAGES instance);
    partial void InsertFORM_TEMPLATE_SQL(FORM_TEMPLATE_SQL instance);
    partial void UpdateFORM_TEMPLATE_SQL(FORM_TEMPLATE_SQL instance);
    partial void DeleteFORM_TEMPLATE_SQL(FORM_TEMPLATE_SQL instance);
    partial void InsertFORM_TEMPLATE_DYNAMIC_ELEMENTS(FORM_TEMPLATE_DYNAMIC_ELEMENTS instance);
    partial void UpdateFORM_TEMPLATE_DYNAMIC_ELEMENTS(FORM_TEMPLATE_DYNAMIC_ELEMENTS instance);
    partial void DeleteFORM_TEMPLATE_DYNAMIC_ELEMENTS(FORM_TEMPLATE_DYNAMIC_ELEMENTS instance);
    partial void InsertFORM_TEMPLATE_LIBRARY_OPTION(FORM_TEMPLATE_LIBRARY_OPTION instance);
    partial void UpdateFORM_TEMPLATE_LIBRARY_OPTION(FORM_TEMPLATE_LIBRARY_OPTION instance);
    partial void DeleteFORM_TEMPLATE_LIBRARY_OPTION(FORM_TEMPLATE_LIBRARY_OPTION instance);
    partial void InsertFORM_OPTION_TYPE(FORM_OPTION_TYPE instance);
    partial void UpdateFORM_OPTION_TYPE(FORM_OPTION_TYPE instance);
    partial void DeleteFORM_OPTION_TYPE(FORM_OPTION_TYPE instance);
    partial void InsertFORM_TEMPLATE_LIBRARY(FORM_TEMPLATE_LIBRARY instance);
    partial void UpdateFORM_TEMPLATE_LIBRARY(FORM_TEMPLATE_LIBRARY instance);
    partial void DeleteFORM_TEMPLATE_LIBRARY(FORM_TEMPLATE_LIBRARY instance);
    partial void InsertFORM_TEMPLATE_SUBMIT_SQL(FORM_TEMPLATE_SUBMIT_SQL instance);
    partial void UpdateFORM_TEMPLATE_SUBMIT_SQL(FORM_TEMPLATE_SUBMIT_SQL instance);
    partial void DeleteFORM_TEMPLATE_SUBMIT_SQL(FORM_TEMPLATE_SUBMIT_SQL instance);
    partial void InsertFORM_INSTANCE_ATTACHMENTS(FORM_INSTANCE_ATTACHMENTS instance);
    partial void UpdateFORM_INSTANCE_ATTACHMENTS(FORM_INSTANCE_ATTACHMENTS instance);
    partial void DeleteFORM_INSTANCE_ATTACHMENTS(FORM_INSTANCE_ATTACHMENTS instance);
    partial void InsertFORM_TEMPLATE_NECESSARY(FORM_TEMPLATE_NECESSARY instance);
    partial void UpdateFORM_TEMPLATE_NECESSARY(FORM_TEMPLATE_NECESSARY instance);
    partial void DeleteFORM_TEMPLATE_NECESSARY(FORM_TEMPLATE_NECESSARY instance);
    partial void InsertFORM_INSTANCE_TARGETS(FORM_INSTANCE_TARGETS instance);
    partial void UpdateFORM_INSTANCE_TARGETS(FORM_INSTANCE_TARGETS instance);
    partial void DeleteFORM_INSTANCE_TARGETS(FORM_INSTANCE_TARGETS instance);
    partial void InsertFORM_TEMPLATE_ELEMENT_READONLY(FORM_TEMPLATE_ELEMENT_READONLY instance);
    partial void UpdateFORM_TEMPLATE_ELEMENT_READONLY(FORM_TEMPLATE_ELEMENT_READONLY instance);
    partial void DeleteFORM_TEMPLATE_ELEMENT_READONLY(FORM_TEMPLATE_ELEMENT_READONLY instance);
    partial void InsertFORM_TEMPLATE_SINGLE(FORM_TEMPLATE_SINGLE instance);
    partial void UpdateFORM_TEMPLATE_SINGLE(FORM_TEMPLATE_SINGLE instance);
    partial void DeleteFORM_TEMPLATE_SINGLE(FORM_TEMPLATE_SINGLE instance);
    partial void InsertFORM_INSTANCE_ELEMENTS(FORM_INSTANCE_ELEMENTS instance);
    partial void UpdateFORM_INSTANCE_ELEMENTS(FORM_INSTANCE_ELEMENTS instance);
    partial void DeleteFORM_INSTANCE_ELEMENTS(FORM_INSTANCE_ELEMENTS instance);
    partial void InsertFORM_TEMPLATE_GROUPS(FORM_TEMPLATE_GROUPS instance);
    partial void UpdateFORM_TEMPLATE_GROUPS(FORM_TEMPLATE_GROUPS instance);
    partial void DeleteFORM_TEMPLATE_GROUPS(FORM_TEMPLATE_GROUPS instance);
    partial void InsertFORM_TEMPLATE_EXPRESSIONS(FORM_TEMPLATE_EXPRESSIONS instance);
    partial void UpdateFORM_TEMPLATE_EXPRESSIONS(FORM_TEMPLATE_EXPRESSIONS instance);
    partial void DeleteFORM_TEMPLATE_EXPRESSIONS(FORM_TEMPLATE_EXPRESSIONS instance);
    partial void InsertFORM_TEMPLATE_SCRIPT(FORM_TEMPLATE_SCRIPT instance);
    partial void UpdateFORM_TEMPLATE_SCRIPT(FORM_TEMPLATE_SCRIPT instance);
    partial void DeleteFORM_TEMPLATE_SCRIPT(FORM_TEMPLATE_SCRIPT instance);
    partial void InsertFORM_INSTANCES(FORM_INSTANCES instance);
    partial void UpdateFORM_INSTANCES(FORM_INSTANCES instance);
    partial void DeleteFORM_INSTANCES(FORM_INSTANCES instance);
    partial void InsertFORM_TEMPLATES(FORM_TEMPLATES instance);
    partial void UpdateFORM_TEMPLATES(FORM_TEMPLATES instance);
    partial void DeleteFORM_TEMPLATES(FORM_TEMPLATES instance);
    partial void InsertFORM_TEMPLATE_PERMISSION(FORM_TEMPLATE_PERMISSION instance);
    partial void UpdateFORM_TEMPLATE_PERMISSION(FORM_TEMPLATE_PERMISSION instance);
    partial void DeleteFORM_TEMPLATE_PERMISSION(FORM_TEMPLATE_PERMISSION instance);
    partial void InsertFORM_TEMPLATE_ELEMENTS(FORM_TEMPLATE_ELEMENTS instance);
    partial void UpdateFORM_TEMPLATE_ELEMENTS(FORM_TEMPLATE_ELEMENTS instance);
    partial void DeleteFORM_TEMPLATE_ELEMENTS(FORM_TEMPLATE_ELEMENTS instance);
    #endregion
		
        //public DataContextDataContext() : 
        //        base(global::HtmlFormUtility.Properties.Settings.Default.www_EduActivityConnectionString1, mappingSource)
        //{
        //    OnCreated();
        //}
		
		public DataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FORM_INSTANCE_BLOCKS> FORM_INSTANCE_BLOCKS
		{
			get
			{
				return this.GetTable<FORM_INSTANCE_BLOCKS>();
			}
		}
		
		public System.Data.Linq.Table<FORM_INSTANCE_EXPRESSIONS> FORM_INSTANCE_EXPRESSIONS
		{
			get
			{
				return this.GetTable<FORM_INSTANCE_EXPRESSIONS>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_IMAGES> FORM_TEMPLATE_IMAGES
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_IMAGES>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_SQL> FORM_TEMPLATE_SQL
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_SQL>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_DYNAMIC_ELEMENTS> FORM_TEMPLATE_DYNAMIC_ELEMENTS
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_DYNAMIC_ELEMENTS>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_LIBRARY_OPTION> FORM_TEMPLATE_LIBRARY_OPTION
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_LIBRARY_OPTION>();
			}
		}
		
		public System.Data.Linq.Table<FORM_OPTION_TYPE> FORM_OPTION_TYPE
		{
			get
			{
				return this.GetTable<FORM_OPTION_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_LIBRARY> FORM_TEMPLATE_LIBRARY
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_LIBRARY>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_SUBMIT_SQL> FORM_TEMPLATE_SUBMIT_SQL
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_SUBMIT_SQL>();
			}
		}
		
		public System.Data.Linq.Table<FORM_INSTANCE_ATTACHMENTS> FORM_INSTANCE_ATTACHMENTS
		{
			get
			{
				return this.GetTable<FORM_INSTANCE_ATTACHMENTS>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_NECESSARY> FORM_TEMPLATE_NECESSARY
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_NECESSARY>();
			}
		}
		
		public System.Data.Linq.Table<FORM_INSTANCE_TARGETS> FORM_INSTANCE_TARGETS
		{
			get
			{
				return this.GetTable<FORM_INSTANCE_TARGETS>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_ELEMENT_READONLY> FORM_TEMPLATE_ELEMENT_READONLies
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_ELEMENT_READONLY>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_SINGLE> FORM_TEMPLATE_SINGLE
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_SINGLE>();
			}
		}
		
		public System.Data.Linq.Table<FORM_INSTANCE_ELEMENTS> FORM_INSTANCE_ELEMENTS
		{
			get
			{
				return this.GetTable<FORM_INSTANCE_ELEMENTS>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_GROUPS> FORM_TEMPLATE_GROUPS
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_GROUPS>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_EXPRESSIONS> FORM_TEMPLATE_EXPRESSIONS
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_EXPRESSIONS>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_SCRIPT> FORM_TEMPLATE_SCRIPT
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_SCRIPT>();
			}
		}
		
		public System.Data.Linq.Table<FORM_INSTANCES> FORM_INSTANCES
		{
			get
			{
				return this.GetTable<FORM_INSTANCES>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATES> FORM_TEMPLATES
		{
			get
			{
				return this.GetTable<FORM_TEMPLATES>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_PERMISSION> FORM_TEMPLATE_PERMISSION
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_PERMISSION>();
			}
		}
		
		public System.Data.Linq.Table<FORM_TEMPLATE_ELEMENTS> FORM_TEMPLATE_ELEMENTS
		{
			get
			{
				return this.GetTable<FORM_TEMPLATE_ELEMENTS>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_INSTANCE_BLOCKS")]
	public partial class FORM_INSTANCE_BLOCKS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INSTANCE_BLOCKS_ID;
		
		private int _INSTANCE_ID;
		
		private string _TABLE_BLOCK_ID;
		
		private string _BLOCK_CONTENT;
		
		private string _TABLE_BLOCK_TITLE;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINSTANCE_BLOCKS_IDChanging(int value);
    partial void OnINSTANCE_BLOCKS_IDChanged();
    partial void OnINSTANCE_IDChanging(int value);
    partial void OnINSTANCE_IDChanged();
    partial void OnTABLE_BLOCK_IDChanging(string value);
    partial void OnTABLE_BLOCK_IDChanged();
    partial void OnBLOCK_CONTENTChanging(string value);
    partial void OnBLOCK_CONTENTChanged();
    partial void OnTABLE_BLOCK_TITLEChanging(string value);
    partial void OnTABLE_BLOCK_TITLEChanged();
    #endregion
		
		public FORM_INSTANCE_BLOCKS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_BLOCKS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int INSTANCE_BLOCKS_ID
		{
			get
			{
				return this._INSTANCE_BLOCKS_ID;
			}
			set
			{
				if ((this._INSTANCE_BLOCKS_ID != value))
				{
					this.OnINSTANCE_BLOCKS_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_BLOCKS_ID = value;
					this.SendPropertyChanged("INSTANCE_BLOCKS_ID");
					this.OnINSTANCE_BLOCKS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_ID", DbType="Int NOT NULL")]
		public int INSTANCE_ID
		{
			get
			{
				return this._INSTANCE_ID;
			}
			set
			{
				if ((this._INSTANCE_ID != value))
				{
					this.OnINSTANCE_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_ID = value;
					this.SendPropertyChanged("INSTANCE_ID");
					this.OnINSTANCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TABLE_BLOCK_ID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TABLE_BLOCK_ID
		{
			get
			{
				return this._TABLE_BLOCK_ID;
			}
			set
			{
				if ((this._TABLE_BLOCK_ID != value))
				{
					this.OnTABLE_BLOCK_IDChanging(value);
					this.SendPropertyChanging();
					this._TABLE_BLOCK_ID = value;
					this.SendPropertyChanged("TABLE_BLOCK_ID");
					this.OnTABLE_BLOCK_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOCK_CONTENT", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BLOCK_CONTENT
		{
			get
			{
				return this._BLOCK_CONTENT;
			}
			set
			{
				if ((this._BLOCK_CONTENT != value))
				{
					this.OnBLOCK_CONTENTChanging(value);
					this.SendPropertyChanging();
					this._BLOCK_CONTENT = value;
					this.SendPropertyChanged("BLOCK_CONTENT");
					this.OnBLOCK_CONTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TABLE_BLOCK_TITLE", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string TABLE_BLOCK_TITLE
		{
			get
			{
				return this._TABLE_BLOCK_TITLE;
			}
			set
			{
				if ((this._TABLE_BLOCK_TITLE != value))
				{
					this.OnTABLE_BLOCK_TITLEChanging(value);
					this.SendPropertyChanging();
					this._TABLE_BLOCK_TITLE = value;
					this.SendPropertyChanged("TABLE_BLOCK_TITLE");
					this.OnTABLE_BLOCK_TITLEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_INSTANCE_EXPRESSIONS")]
	public partial class FORM_INSTANCE_EXPRESSIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INSTANCE_EXPRESSION_ID;
		
		private int _TEMPLATE_EXPRESSION_ID;
		
		private int _INSTANCE_ID;
		
		private double _EXPRESSION_VALUE;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINSTANCE_EXPRESSION_IDChanging(int value);
    partial void OnINSTANCE_EXPRESSION_IDChanged();
    partial void OnTEMPLATE_EXPRESSION_IDChanging(int value);
    partial void OnTEMPLATE_EXPRESSION_IDChanged();
    partial void OnINSTANCE_IDChanging(int value);
    partial void OnINSTANCE_IDChanged();
    partial void OnEXPRESSION_VALUEChanging(double value);
    partial void OnEXPRESSION_VALUEChanged();
    #endregion
		
		public FORM_INSTANCE_EXPRESSIONS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_EXPRESSION_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int INSTANCE_EXPRESSION_ID
		{
			get
			{
				return this._INSTANCE_EXPRESSION_ID;
			}
			set
			{
				if ((this._INSTANCE_EXPRESSION_ID != value))
				{
					this.OnINSTANCE_EXPRESSION_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_EXPRESSION_ID = value;
					this.SendPropertyChanged("INSTANCE_EXPRESSION_ID");
					this.OnINSTANCE_EXPRESSION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_EXPRESSION_ID", DbType="Int NOT NULL")]
		public int TEMPLATE_EXPRESSION_ID
		{
			get
			{
				return this._TEMPLATE_EXPRESSION_ID;
			}
			set
			{
				if ((this._TEMPLATE_EXPRESSION_ID != value))
				{
					this.OnTEMPLATE_EXPRESSION_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_EXPRESSION_ID = value;
					this.SendPropertyChanged("TEMPLATE_EXPRESSION_ID");
					this.OnTEMPLATE_EXPRESSION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_ID", DbType="Int NOT NULL")]
		public int INSTANCE_ID
		{
			get
			{
				return this._INSTANCE_ID;
			}
			set
			{
				if ((this._INSTANCE_ID != value))
				{
					this.OnINSTANCE_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_ID = value;
					this.SendPropertyChanged("INSTANCE_ID");
					this.OnINSTANCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPRESSION_VALUE", DbType="Float NOT NULL")]
		public double EXPRESSION_VALUE
		{
			get
			{
				return this._EXPRESSION_VALUE;
			}
			set
			{
				if ((this._EXPRESSION_VALUE != value))
				{
					this.OnEXPRESSION_VALUEChanging(value);
					this.SendPropertyChanging();
					this._EXPRESSION_VALUE = value;
					this.SendPropertyChanged("EXPRESSION_VALUE");
					this.OnEXPRESSION_VALUEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_IMAGES")]
	public partial class FORM_TEMPLATE_IMAGES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_IMAGE_ID;
		
		private int _TEMPLATE_ID;
		
		private string _FILE_NAME;
		
		private System.Data.Linq.Binary _IMAGE_CONTENT;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_IMAGE_IDChanging(int value);
    partial void OnTEMPLATE_IMAGE_IDChanged();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnFILE_NAMEChanging(string value);
    partial void OnFILE_NAMEChanged();
    partial void OnIMAGE_CONTENTChanging(System.Data.Linq.Binary value);
    partial void OnIMAGE_CONTENTChanged();
    #endregion
		
		public FORM_TEMPLATE_IMAGES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_IMAGE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TEMPLATE_IMAGE_ID
		{
			get
			{
				return this._TEMPLATE_IMAGE_ID;
			}
			set
			{
				if ((this._TEMPLATE_IMAGE_ID != value))
				{
					this.OnTEMPLATE_IMAGE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_IMAGE_ID = value;
					this.SendPropertyChanged("TEMPLATE_IMAGE_ID");
					this.OnTEMPLATE_IMAGE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL")]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FILE_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FILE_NAME
		{
			get
			{
				return this._FILE_NAME;
			}
			set
			{
				if ((this._FILE_NAME != value))
				{
					this.OnFILE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FILE_NAME = value;
					this.SendPropertyChanged("FILE_NAME");
					this.OnFILE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE_CONTENT", DbType="VarBinary(1) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary IMAGE_CONTENT
		{
			get
			{
				return this._IMAGE_CONTENT;
			}
			set
			{
				if ((this._IMAGE_CONTENT != value))
				{
					this.OnIMAGE_CONTENTChanging(value);
					this.SendPropertyChanging();
					this._IMAGE_CONTENT = value;
					this.SendPropertyChanged("IMAGE_CONTENT");
					this.OnIMAGE_CONTENTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_SQL")]
	public partial class FORM_TEMPLATE_SQL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_ID;
		
		private string _KEY;
		
		private string _SOURCEREFSTATEMENT;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnKEYChanging(string value);
    partial void OnKEYChanged();
    partial void OnSOURCEREFSTATEMENTChanging(string value);
    partial void OnSOURCEREFSTATEMENTChanged();
    #endregion
		
		public FORM_TEMPLATE_SQL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[KEY]", Storage="_KEY", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KEY
		{
			get
			{
				return this._KEY;
			}
			set
			{
				if ((this._KEY != value))
				{
					this.OnKEYChanging(value);
					this.SendPropertyChanging();
					this._KEY = value;
					this.SendPropertyChanged("KEY");
					this.OnKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOURCEREFSTATEMENT", DbType="VarChar(1000)")]
		public string SOURCEREFSTATEMENT
		{
			get
			{
				return this._SOURCEREFSTATEMENT;
			}
			set
			{
				if ((this._SOURCEREFSTATEMENT != value))
				{
					this.OnSOURCEREFSTATEMENTChanging(value);
					this.SendPropertyChanging();
					this._SOURCEREFSTATEMENT = value;
					this.SendPropertyChanged("SOURCEREFSTATEMENT");
					this.OnSOURCEREFSTATEMENTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_DYNAMIC_ELEMENTS")]
	public partial class FORM_TEMPLATE_DYNAMIC_ELEMENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_ID;
		
		private string _KEY;
		
		private string _SOURCEREFSTATEMENT;
		
		private string _DISPLAY_DIRECTION;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnKEYChanging(string value);
    partial void OnKEYChanged();
    partial void OnSOURCEREFSTATEMENTChanging(string value);
    partial void OnSOURCEREFSTATEMENTChanged();
    partial void OnDISPLAY_DIRECTIONChanging(string value);
    partial void OnDISPLAY_DIRECTIONChanged();
    #endregion
		
		public FORM_TEMPLATE_DYNAMIC_ELEMENTS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[KEY]", Storage="_KEY", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KEY
		{
			get
			{
				return this._KEY;
			}
			set
			{
				if ((this._KEY != value))
				{
					this.OnKEYChanging(value);
					this.SendPropertyChanging();
					this._KEY = value;
					this.SendPropertyChanged("KEY");
					this.OnKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOURCEREFSTATEMENT", DbType="VarChar(MAX)")]
		public string SOURCEREFSTATEMENT
		{
			get
			{
				return this._SOURCEREFSTATEMENT;
			}
			set
			{
				if ((this._SOURCEREFSTATEMENT != value))
				{
					this.OnSOURCEREFSTATEMENTChanging(value);
					this.SendPropertyChanging();
					this._SOURCEREFSTATEMENT = value;
					this.SendPropertyChanged("SOURCEREFSTATEMENT");
					this.OnSOURCEREFSTATEMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAY_DIRECTION", DbType="VarChar(50)")]
		public string DISPLAY_DIRECTION
		{
			get
			{
				return this._DISPLAY_DIRECTION;
			}
			set
			{
				if ((this._DISPLAY_DIRECTION != value))
				{
					this.OnDISPLAY_DIRECTIONChanging(value);
					this.SendPropertyChanging();
					this._DISPLAY_DIRECTION = value;
					this.SendPropertyChanged("DISPLAY_DIRECTION");
					this.OnDISPLAY_DIRECTIONChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_LIBRARY_OPTION")]
	public partial class FORM_TEMPLATE_LIBRARY_OPTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OPTION_ID;
		
		private System.Nullable<int> _LIBRARY_ID;
		
		private string _OPTION_TYPE;
		
		private string _OPTION_TEXT;
		
		private System.Nullable<double> _OPTION_POINTS;
		
		private System.Nullable<int> _DISPLAY_ORDER;
		
		private System.Nullable<char> _IS_ANSWER;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOPTION_IDChanging(int value);
    partial void OnOPTION_IDChanged();
    partial void OnLIBRARY_IDChanging(System.Nullable<int> value);
    partial void OnLIBRARY_IDChanged();
    partial void OnOPTION_TYPEChanging(string value);
    partial void OnOPTION_TYPEChanged();
    partial void OnOPTION_TEXTChanging(string value);
    partial void OnOPTION_TEXTChanged();
    partial void OnOPTION_POINTSChanging(System.Nullable<double> value);
    partial void OnOPTION_POINTSChanged();
    partial void OnDISPLAY_ORDERChanging(System.Nullable<int> value);
    partial void OnDISPLAY_ORDERChanged();
    partial void OnIS_ANSWERChanging(System.Nullable<char> value);
    partial void OnIS_ANSWERChanged();
    #endregion
		
		public FORM_TEMPLATE_LIBRARY_OPTION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPTION_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OPTION_ID
		{
			get
			{
				return this._OPTION_ID;
			}
			set
			{
				if ((this._OPTION_ID != value))
				{
					this.OnOPTION_IDChanging(value);
					this.SendPropertyChanging();
					this._OPTION_ID = value;
					this.SendPropertyChanged("OPTION_ID");
					this.OnOPTION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIBRARY_ID", DbType="Int")]
		public System.Nullable<int> LIBRARY_ID
		{
			get
			{
				return this._LIBRARY_ID;
			}
			set
			{
				if ((this._LIBRARY_ID != value))
				{
					this.OnLIBRARY_IDChanging(value);
					this.SendPropertyChanging();
					this._LIBRARY_ID = value;
					this.SendPropertyChanged("LIBRARY_ID");
					this.OnLIBRARY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPTION_TYPE", DbType="VarChar(20)")]
		public string OPTION_TYPE
		{
			get
			{
				return this._OPTION_TYPE;
			}
			set
			{
				if ((this._OPTION_TYPE != value))
				{
					this.OnOPTION_TYPEChanging(value);
					this.SendPropertyChanging();
					this._OPTION_TYPE = value;
					this.SendPropertyChanged("OPTION_TYPE");
					this.OnOPTION_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPTION_TEXT", DbType="VarChar(1000)")]
		public string OPTION_TEXT
		{
			get
			{
				return this._OPTION_TEXT;
			}
			set
			{
				if ((this._OPTION_TEXT != value))
				{
					this.OnOPTION_TEXTChanging(value);
					this.SendPropertyChanging();
					this._OPTION_TEXT = value;
					this.SendPropertyChanged("OPTION_TEXT");
					this.OnOPTION_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPTION_POINTS", DbType="Float")]
		public System.Nullable<double> OPTION_POINTS
		{
			get
			{
				return this._OPTION_POINTS;
			}
			set
			{
				if ((this._OPTION_POINTS != value))
				{
					this.OnOPTION_POINTSChanging(value);
					this.SendPropertyChanging();
					this._OPTION_POINTS = value;
					this.SendPropertyChanged("OPTION_POINTS");
					this.OnOPTION_POINTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAY_ORDER", DbType="Int")]
		public System.Nullable<int> DISPLAY_ORDER
		{
			get
			{
				return this._DISPLAY_ORDER;
			}
			set
			{
				if ((this._DISPLAY_ORDER != value))
				{
					this.OnDISPLAY_ORDERChanging(value);
					this.SendPropertyChanging();
					this._DISPLAY_ORDER = value;
					this.SendPropertyChanged("DISPLAY_ORDER");
					this.OnDISPLAY_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_ANSWER", DbType="Char(1)")]
		public System.Nullable<char> IS_ANSWER
		{
			get
			{
				return this._IS_ANSWER;
			}
			set
			{
				if ((this._IS_ANSWER != value))
				{
					this.OnIS_ANSWERChanging(value);
					this.SendPropertyChanging();
					this._IS_ANSWER = value;
					this.SendPropertyChanged("IS_ANSWER");
					this.OnIS_ANSWERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_OPTION_TYPE")]
	public partial class FORM_OPTION_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CODE;
		
		private string _NAME;
		
		private System.Nullable<int> _DISPLAY_ORDER;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnDISPLAY_ORDERChanging(System.Nullable<int> value);
    partial void OnDISPLAY_ORDERChanged();
    #endregion
		
		public FORM_OPTION_TYPE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAY_ORDER", DbType="Int")]
		public System.Nullable<int> DISPLAY_ORDER
		{
			get
			{
				return this._DISPLAY_ORDER;
			}
			set
			{
				if ((this._DISPLAY_ORDER != value))
				{
					this.OnDISPLAY_ORDERChanging(value);
					this.SendPropertyChanging();
					this._DISPLAY_ORDER = value;
					this.SendPropertyChanged("DISPLAY_ORDER");
					this.OnDISPLAY_ORDERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_LIBRARY")]
	public partial class FORM_TEMPLATE_LIBRARY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FORM_TEMPLATE_LIBRARY_ID;
		
		private System.Nullable<int> _FORM_TEMPLATE_ID;
		
		private string _QUESTION_CONTENT;
		
		private string _QUESTION_TYPE;
		
		private bool _DISPLAY;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFORM_TEMPLATE_LIBRARY_IDChanging(int value);
    partial void OnFORM_TEMPLATE_LIBRARY_IDChanged();
    partial void OnFORM_TEMPLATE_IDChanging(System.Nullable<int> value);
    partial void OnFORM_TEMPLATE_IDChanged();
    partial void OnQUESTION_CONTENTChanging(string value);
    partial void OnQUESTION_CONTENTChanged();
    partial void OnQUESTION_TYPEChanging(string value);
    partial void OnQUESTION_TYPEChanged();
    partial void OnDISPLAYChanging(bool value);
    partial void OnDISPLAYChanged();
    #endregion
		
		public FORM_TEMPLATE_LIBRARY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_TEMPLATE_LIBRARY_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FORM_TEMPLATE_LIBRARY_ID
		{
			get
			{
				return this._FORM_TEMPLATE_LIBRARY_ID;
			}
			set
			{
				if ((this._FORM_TEMPLATE_LIBRARY_ID != value))
				{
					this.OnFORM_TEMPLATE_LIBRARY_IDChanging(value);
					this.SendPropertyChanging();
					this._FORM_TEMPLATE_LIBRARY_ID = value;
					this.SendPropertyChanged("FORM_TEMPLATE_LIBRARY_ID");
					this.OnFORM_TEMPLATE_LIBRARY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_TEMPLATE_ID", DbType="Int")]
		public System.Nullable<int> FORM_TEMPLATE_ID
		{
			get
			{
				return this._FORM_TEMPLATE_ID;
			}
			set
			{
				if ((this._FORM_TEMPLATE_ID != value))
				{
					this.OnFORM_TEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._FORM_TEMPLATE_ID = value;
					this.SendPropertyChanged("FORM_TEMPLATE_ID");
					this.OnFORM_TEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUESTION_CONTENT", DbType="VarChar(1000)")]
		public string QUESTION_CONTENT
		{
			get
			{
				return this._QUESTION_CONTENT;
			}
			set
			{
				if ((this._QUESTION_CONTENT != value))
				{
					this.OnQUESTION_CONTENTChanging(value);
					this.SendPropertyChanging();
					this._QUESTION_CONTENT = value;
					this.SendPropertyChanged("QUESTION_CONTENT");
					this.OnQUESTION_CONTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUESTION_TYPE", DbType="VarChar(10)")]
		public string QUESTION_TYPE
		{
			get
			{
				return this._QUESTION_TYPE;
			}
			set
			{
				if ((this._QUESTION_TYPE != value))
				{
					this.OnQUESTION_TYPEChanging(value);
					this.SendPropertyChanging();
					this._QUESTION_TYPE = value;
					this.SendPropertyChanged("QUESTION_TYPE");
					this.OnQUESTION_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAY", DbType="Bit NOT NULL")]
		public bool DISPLAY
		{
			get
			{
				return this._DISPLAY;
			}
			set
			{
				if ((this._DISPLAY != value))
				{
					this.OnDISPLAYChanging(value);
					this.SendPropertyChanging();
					this._DISPLAY = value;
					this.SendPropertyChanged("DISPLAY");
					this.OnDISPLAYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_SUBMIT_SQL")]
	public partial class FORM_TEMPLATE_SUBMIT_SQL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_ID;
		
		private string _KEY;
		
		private string _SOURCEREFSTATEMENT;
		
		private bool _EXECUTE_FIRST_TIME;
		
		private EntityRef<FORM_TEMPLATES> _FORM_TEMPLATES;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnKEYChanging(string value);
    partial void OnKEYChanged();
    partial void OnSOURCEREFSTATEMENTChanging(string value);
    partial void OnSOURCEREFSTATEMENTChanged();
    partial void OnEXECUTE_FIRST_TIMEChanging(bool value);
    partial void OnEXECUTE_FIRST_TIMEChanged();
    #endregion
		
		public FORM_TEMPLATE_SUBMIT_SQL()
		{
			this._FORM_TEMPLATES = default(EntityRef<FORM_TEMPLATES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					if (this._FORM_TEMPLATES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[KEY]", Storage="_KEY", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KEY
		{
			get
			{
				return this._KEY;
			}
			set
			{
				if ((this._KEY != value))
				{
					this.OnKEYChanging(value);
					this.SendPropertyChanging();
					this._KEY = value;
					this.SendPropertyChanged("KEY");
					this.OnKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOURCEREFSTATEMENT", DbType="VarChar(1000)")]
		public string SOURCEREFSTATEMENT
		{
			get
			{
				return this._SOURCEREFSTATEMENT;
			}
			set
			{
				if ((this._SOURCEREFSTATEMENT != value))
				{
					this.OnSOURCEREFSTATEMENTChanging(value);
					this.SendPropertyChanging();
					this._SOURCEREFSTATEMENT = value;
					this.SendPropertyChanged("SOURCEREFSTATEMENT");
					this.OnSOURCEREFSTATEMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXECUTE_FIRST_TIME", DbType="Bit NOT NULL")]
		public bool EXECUTE_FIRST_TIME
		{
			get
			{
				return this._EXECUTE_FIRST_TIME;
			}
			set
			{
				if ((this._EXECUTE_FIRST_TIME != value))
				{
					this.OnEXECUTE_FIRST_TIMEChanging(value);
					this.SendPropertyChanging();
					this._EXECUTE_FIRST_TIME = value;
					this.SendPropertyChanged("EXECUTE_FIRST_TIME");
					this.OnEXECUTE_FIRST_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_TEMPLATES_FORM_TEMPLATE_SUBMIT_SQL", Storage="_FORM_TEMPLATES", ThisKey="TEMPLATE_ID", OtherKey="TEMPLATE_ID", IsForeignKey=true)]
		public FORM_TEMPLATES FORM_TEMPLATES
		{
			get
			{
				return this._FORM_TEMPLATES.Entity;
			}
			set
			{
				FORM_TEMPLATES previousValue = this._FORM_TEMPLATES.Entity;
				if (((previousValue != value) 
							|| (this._FORM_TEMPLATES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORM_TEMPLATES.Entity = null;
						previousValue.FORM_TEMPLATE_SUBMIT_SQL.Remove(this);
					}
					this._FORM_TEMPLATES.Entity = value;
					if ((value != null))
					{
						value.FORM_TEMPLATE_SUBMIT_SQL.Add(this);
						this._TEMPLATE_ID = value.TEMPLATE_ID;
					}
					else
					{
						this._TEMPLATE_ID = default(int);
					}
					this.SendPropertyChanged("FORM_TEMPLATES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_INSTANCE_ATTACHMENTS")]
	public partial class FORM_INSTANCE_ATTACHMENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ATTACHMENT_ID;
		
		private System.Nullable<int> _INSTANCE_ID;
		
		private System.Data.Linq.Binary _ATTACHMENT;
		
		private string _Name;
		
		private EntityRef<FORM_INSTANCES> _FORM_INSTANCES;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnATTACHMENT_IDChanging(string value);
    partial void OnATTACHMENT_IDChanged();
    partial void OnINSTANCE_IDChanging(System.Nullable<int> value);
    partial void OnINSTANCE_IDChanged();
    partial void OnATTACHMENTChanging(System.Data.Linq.Binary value);
    partial void OnATTACHMENTChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public FORM_INSTANCE_ATTACHMENTS()
		{
			this._FORM_INSTANCES = default(EntityRef<FORM_INSTANCES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATTACHMENT_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ATTACHMENT_ID
		{
			get
			{
				return this._ATTACHMENT_ID;
			}
			set
			{
				if ((this._ATTACHMENT_ID != value))
				{
					this.OnATTACHMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._ATTACHMENT_ID = value;
					this.SendPropertyChanged("ATTACHMENT_ID");
					this.OnATTACHMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_ID", DbType="Int")]
		public System.Nullable<int> INSTANCE_ID
		{
			get
			{
				return this._INSTANCE_ID;
			}
			set
			{
				if ((this._INSTANCE_ID != value))
				{
					if (this._FORM_INSTANCES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINSTANCE_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_ID = value;
					this.SendPropertyChanged("INSTANCE_ID");
					this.OnINSTANCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATTACHMENT", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ATTACHMENT
		{
			get
			{
				return this._ATTACHMENT;
			}
			set
			{
				if ((this._ATTACHMENT != value))
				{
					this.OnATTACHMENTChanging(value);
					this.SendPropertyChanging();
					this._ATTACHMENT = value;
					this.SendPropertyChanged("ATTACHMENT");
					this.OnATTACHMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_INSTANCES_FORM_INSTANCE_ATTACHMENTS", Storage="_FORM_INSTANCES", ThisKey="INSTANCE_ID", OtherKey="INSTANCE_ID", IsForeignKey=true)]
		public FORM_INSTANCES FORM_INSTANCES
		{
			get
			{
				return this._FORM_INSTANCES.Entity;
			}
			set
			{
				FORM_INSTANCES previousValue = this._FORM_INSTANCES.Entity;
				if (((previousValue != value) 
							|| (this._FORM_INSTANCES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORM_INSTANCES.Entity = null;
						previousValue.FORM_INSTANCE_ATTACHMENTS.Remove(this);
					}
					this._FORM_INSTANCES.Entity = value;
					if ((value != null))
					{
						value.FORM_INSTANCE_ATTACHMENTS.Add(this);
						this._INSTANCE_ID = value.INSTANCE_ID;
					}
					else
					{
						this._INSTANCE_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("FORM_INSTANCES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_NECESSARY")]
	public partial class FORM_TEMPLATE_NECESSARY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_ID;
		
		private string _NAME;
		
		private System.Nullable<bool> _ENABLE;
		
		private string _MESSAGE;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnENABLEChanging(System.Nullable<bool> value);
    partial void OnENABLEChanged();
    partial void OnMESSAGEChanging(string value);
    partial void OnMESSAGEChanged();
    #endregion
		
		public FORM_TEMPLATE_NECESSARY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLE", DbType="Bit")]
		public System.Nullable<bool> ENABLE
		{
			get
			{
				return this._ENABLE;
			}
			set
			{
				if ((this._ENABLE != value))
				{
					this.OnENABLEChanging(value);
					this.SendPropertyChanging();
					this._ENABLE = value;
					this.SendPropertyChanged("ENABLE");
					this.OnENABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESSAGE", DbType="VarChar(500)")]
		public string MESSAGE
		{
			get
			{
				return this._MESSAGE;
			}
			set
			{
				if ((this._MESSAGE != value))
				{
					this.OnMESSAGEChanging(value);
					this.SendPropertyChanging();
					this._MESSAGE = value;
					this.SendPropertyChanged("MESSAGE");
					this.OnMESSAGEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_INSTANCE_TARGETS")]
	public partial class FORM_INSTANCE_TARGETS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TargetID;
		
		private int _INSTANCE_ID;
		
		private System.Nullable<int> _TargetOrder;
		
		private string _Status;
		
		private string _TargetType;
		
		private System.Nullable<System.DateTime> _AlertTime;
		
		private string _TargetSource;
		
		private EntityRef<FORM_INSTANCES> _FORM_INSTANCES;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTargetIDChanging(string value);
    partial void OnTargetIDChanged();
    partial void OnINSTANCE_IDChanging(int value);
    partial void OnINSTANCE_IDChanged();
    partial void OnTargetOrderChanging(System.Nullable<int> value);
    partial void OnTargetOrderChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTargetTypeChanging(string value);
    partial void OnTargetTypeChanged();
    partial void OnAlertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAlertTimeChanged();
    partial void OnTargetSourceChanging(string value);
    partial void OnTargetSourceChanged();
    #endregion
		
		public FORM_INSTANCE_TARGETS()
		{
			this._FORM_INSTANCES = default(EntityRef<FORM_INSTANCES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int INSTANCE_ID
		{
			get
			{
				return this._INSTANCE_ID;
			}
			set
			{
				if ((this._INSTANCE_ID != value))
				{
					if (this._FORM_INSTANCES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINSTANCE_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_ID = value;
					this.SendPropertyChanged("INSTANCE_ID");
					this.OnINSTANCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetOrder", DbType="Int")]
		public System.Nullable<int> TargetOrder
		{
			get
			{
				return this._TargetOrder;
			}
			set
			{
				if ((this._TargetOrder != value))
				{
					this.OnTargetOrderChanging(value);
					this.SendPropertyChanging();
					this._TargetOrder = value;
					this.SendPropertyChanged("TargetOrder");
					this.OnTargetOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(1)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlertTime
		{
			get
			{
				return this._AlertTime;
			}
			set
			{
				if ((this._AlertTime != value))
				{
					this.OnAlertTimeChanging(value);
					this.SendPropertyChanging();
					this._AlertTime = value;
					this.SendPropertyChanged("AlertTime");
					this.OnAlertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetSource", DbType="VarChar(20)")]
		public string TargetSource
		{
			get
			{
				return this._TargetSource;
			}
			set
			{
				if ((this._TargetSource != value))
				{
					this.OnTargetSourceChanging(value);
					this.SendPropertyChanging();
					this._TargetSource = value;
					this.SendPropertyChanged("TargetSource");
					this.OnTargetSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_INSTANCES_FORM_INSTANCE_TARGETS", Storage="_FORM_INSTANCES", ThisKey="INSTANCE_ID", OtherKey="INSTANCE_ID", IsForeignKey=true)]
		public FORM_INSTANCES FORM_INSTANCES
		{
			get
			{
				return this._FORM_INSTANCES.Entity;
			}
			set
			{
				FORM_INSTANCES previousValue = this._FORM_INSTANCES.Entity;
				if (((previousValue != value) 
							|| (this._FORM_INSTANCES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORM_INSTANCES.Entity = null;
						previousValue.FORM_INSTANCE_TARGETS.Remove(this);
					}
					this._FORM_INSTANCES.Entity = value;
					if ((value != null))
					{
						value.FORM_INSTANCE_TARGETS.Add(this);
						this._INSTANCE_ID = value.INSTANCE_ID;
					}
					else
					{
						this._INSTANCE_ID = default(int);
					}
					this.SendPropertyChanged("FORM_INSTANCES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_ELEMENT_READONLY")]
	public partial class FORM_TEMPLATE_ELEMENT_READONLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEMPLATE_ELEMELT_ID;
		
		private string _SETTINGTYPE;
		
		private string _SETTINGID;
		
		private string _JOB_CODE;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTEMPLATE_ELEMELT_IDChanging(string value);
    partial void OnTEMPLATE_ELEMELT_IDChanged();
    partial void OnSETTINGTYPEChanging(string value);
    partial void OnSETTINGTYPEChanged();
    partial void OnSETTINGIDChanging(string value);
    partial void OnSETTINGIDChanged();
    partial void OnJOB_CODEChanging(string value);
    partial void OnJOB_CODEChanged();
    #endregion
		
		public FORM_TEMPLATE_ELEMENT_READONLY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ELEMELT_ID", DbType="VarChar(60)")]
		public string TEMPLATE_ELEMELT_ID
		{
			get
			{
				return this._TEMPLATE_ELEMELT_ID;
			}
			set
			{
				if ((this._TEMPLATE_ELEMELT_ID != value))
				{
					this.OnTEMPLATE_ELEMELT_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ELEMELT_ID = value;
					this.SendPropertyChanged("TEMPLATE_ELEMELT_ID");
					this.OnTEMPLATE_ELEMELT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SETTINGTYPE", DbType="VarChar(20)")]
		public string SETTINGTYPE
		{
			get
			{
				return this._SETTINGTYPE;
			}
			set
			{
				if ((this._SETTINGTYPE != value))
				{
					this.OnSETTINGTYPEChanging(value);
					this.SendPropertyChanging();
					this._SETTINGTYPE = value;
					this.SendPropertyChanged("SETTINGTYPE");
					this.OnSETTINGTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SETTINGID", DbType="VarChar(20)")]
		public string SETTINGID
		{
			get
			{
				return this._SETTINGID;
			}
			set
			{
				if ((this._SETTINGID != value))
				{
					this.OnSETTINGIDChanging(value);
					this.SendPropertyChanging();
					this._SETTINGID = value;
					this.SendPropertyChanged("SETTINGID");
					this.OnSETTINGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_CODE", DbType="VarChar(20)")]
		public string JOB_CODE
		{
			get
			{
				return this._JOB_CODE;
			}
			set
			{
				if ((this._JOB_CODE != value))
				{
					this.OnJOB_CODEChanging(value);
					this.SendPropertyChanging();
					this._JOB_CODE = value;
					this.SendPropertyChanged("JOB_CODE");
					this.OnJOB_CODEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_SINGLE")]
	public partial class FORM_TEMPLATE_SINGLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SettingID;
		
		private int _TemplateID;
		
		private string _IDs;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingIDChanging(int value);
    partial void OnSettingIDChanged();
    partial void OnTemplateIDChanging(int value);
    partial void OnTemplateIDChanged();
    partial void OnIDsChanging(string value);
    partial void OnIDsChanged();
    #endregion
		
		public FORM_TEMPLATE_SINGLE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SettingID
		{
			get
			{
				return this._SettingID;
			}
			set
			{
				if ((this._SettingID != value))
				{
					this.OnSettingIDChanging(value);
					this.SendPropertyChanging();
					this._SettingID = value;
					this.SendPropertyChanged("SettingID");
					this.OnSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateID", DbType="Int NOT NULL")]
		public int TemplateID
		{
			get
			{
				return this._TemplateID;
			}
			set
			{
				if ((this._TemplateID != value))
				{
					this.OnTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateID = value;
					this.SendPropertyChanged("TemplateID");
					this.OnTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDs", DbType="VarChar(500)")]
		public string IDs
		{
			get
			{
				return this._IDs;
			}
			set
			{
				if ((this._IDs != value))
				{
					this.OnIDsChanging(value);
					this.SendPropertyChanging();
					this._IDs = value;
					this.SendPropertyChanged("IDs");
					this.OnIDsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_INSTANCE_ELEMENTS")]
	public partial class FORM_INSTANCE_ELEMENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _INSTANCE_ELEMENT_ID;
		
		private int _INSTANCE_ID;
		
		private string _ID;
		
		private string _NAME;
		
		private string _ELEMENT_VALUE;
		
		private string _SELECT_VALUE;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINSTANCE_ELEMENT_IDChanging(string value);
    partial void OnINSTANCE_ELEMENT_IDChanged();
    partial void OnINSTANCE_IDChanging(int value);
    partial void OnINSTANCE_IDChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnELEMENT_VALUEChanging(string value);
    partial void OnELEMENT_VALUEChanged();
    partial void OnSELECT_VALUEChanging(string value);
    partial void OnSELECT_VALUEChanged();
    #endregion
		
		public FORM_INSTANCE_ELEMENTS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_ELEMENT_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string INSTANCE_ELEMENT_ID
		{
			get
			{
				return this._INSTANCE_ELEMENT_ID;
			}
			set
			{
				if ((this._INSTANCE_ELEMENT_ID != value))
				{
					this.OnINSTANCE_ELEMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_ELEMENT_ID = value;
					this.SendPropertyChanged("INSTANCE_ELEMENT_ID");
					this.OnINSTANCE_ELEMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_ID", DbType="Int NOT NULL")]
		public int INSTANCE_ID
		{
			get
			{
				return this._INSTANCE_ID;
			}
			set
			{
				if ((this._INSTANCE_ID != value))
				{
					this.OnINSTANCE_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_ID = value;
					this.SendPropertyChanged("INSTANCE_ID");
					this.OnINSTANCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELEMENT_VALUE", DbType="NVarChar(MAX)")]
		public string ELEMENT_VALUE
		{
			get
			{
				return this._ELEMENT_VALUE;
			}
			set
			{
				if ((this._ELEMENT_VALUE != value))
				{
					this.OnELEMENT_VALUEChanging(value);
					this.SendPropertyChanging();
					this._ELEMENT_VALUE = value;
					this.SendPropertyChanged("ELEMENT_VALUE");
					this.OnELEMENT_VALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SELECT_VALUE", DbType="NVarChar(MAX)")]
		public string SELECT_VALUE
		{
			get
			{
				return this._SELECT_VALUE;
			}
			set
			{
				if ((this._SELECT_VALUE != value))
				{
					this.OnSELECT_VALUEChanging(value);
					this.SendPropertyChanging();
					this._SELECT_VALUE = value;
					this.SendPropertyChanged("SELECT_VALUE");
					this.OnSELECT_VALUEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_GROUPS")]
	public partial class FORM_TEMPLATE_GROUPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GROUP_ID;
		
		private int _TEMPLATE_ID;
		
		private string _GROUP_NAME;
		
		private System.Nullable<int> _DISPLAY_ORDER;
		
		private bool _TO_EVALTARGET;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_IDChanging(int value);
    partial void OnGROUP_IDChanged();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnGROUP_NAMEChanging(string value);
    partial void OnGROUP_NAMEChanged();
    partial void OnDISPLAY_ORDERChanging(System.Nullable<int> value);
    partial void OnDISPLAY_ORDERChanged();
    partial void OnTO_EVALTARGETChanging(bool value);
    partial void OnTO_EVALTARGETChanged();
    #endregion
		
		public FORM_TEMPLATE_GROUPS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL")]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_NAME", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string GROUP_NAME
		{
			get
			{
				return this._GROUP_NAME;
			}
			set
			{
				if ((this._GROUP_NAME != value))
				{
					this.OnGROUP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._GROUP_NAME = value;
					this.SendPropertyChanged("GROUP_NAME");
					this.OnGROUP_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAY_ORDER", DbType="Int")]
		public System.Nullable<int> DISPLAY_ORDER
		{
			get
			{
				return this._DISPLAY_ORDER;
			}
			set
			{
				if ((this._DISPLAY_ORDER != value))
				{
					this.OnDISPLAY_ORDERChanging(value);
					this.SendPropertyChanging();
					this._DISPLAY_ORDER = value;
					this.SendPropertyChanged("DISPLAY_ORDER");
					this.OnDISPLAY_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TO_EVALTARGET", DbType="Bit NOT NULL")]
		public bool TO_EVALTARGET
		{
			get
			{
				return this._TO_EVALTARGET;
			}
			set
			{
				if ((this._TO_EVALTARGET != value))
				{
					this.OnTO_EVALTARGETChanging(value);
					this.SendPropertyChanging();
					this._TO_EVALTARGET = value;
					this.SendPropertyChanged("TO_EVALTARGET");
					this.OnTO_EVALTARGETChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_EXPRESSIONS")]
	public partial class FORM_TEMPLATE_EXPRESSIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_EXPRESSION_ID;
		
		private int _TEMPLATE_ID;
		
		private string _TEMPLATE_EXPRESSION_NAME;
		
		private string _EXPRESSION;
		
		private int _EXECUTE_ORDER;
		
		private bool _ISFINALSCORE;
		
		private bool _ALLOWUSERDEFINE;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_EXPRESSION_IDChanging(int value);
    partial void OnTEMPLATE_EXPRESSION_IDChanged();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnTEMPLATE_EXPRESSION_NAMEChanging(string value);
    partial void OnTEMPLATE_EXPRESSION_NAMEChanged();
    partial void OnEXPRESSIONChanging(string value);
    partial void OnEXPRESSIONChanged();
    partial void OnEXECUTE_ORDERChanging(int value);
    partial void OnEXECUTE_ORDERChanged();
    partial void OnISFINALSCOREChanging(bool value);
    partial void OnISFINALSCOREChanged();
    partial void OnALLOWUSERDEFINEChanging(bool value);
    partial void OnALLOWUSERDEFINEChanged();
    #endregion
		
		public FORM_TEMPLATE_EXPRESSIONS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_EXPRESSION_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TEMPLATE_EXPRESSION_ID
		{
			get
			{
				return this._TEMPLATE_EXPRESSION_ID;
			}
			set
			{
				if ((this._TEMPLATE_EXPRESSION_ID != value))
				{
					this.OnTEMPLATE_EXPRESSION_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_EXPRESSION_ID = value;
					this.SendPropertyChanged("TEMPLATE_EXPRESSION_ID");
					this.OnTEMPLATE_EXPRESSION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL")]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_EXPRESSION_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TEMPLATE_EXPRESSION_NAME
		{
			get
			{
				return this._TEMPLATE_EXPRESSION_NAME;
			}
			set
			{
				if ((this._TEMPLATE_EXPRESSION_NAME != value))
				{
					this.OnTEMPLATE_EXPRESSION_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_EXPRESSION_NAME = value;
					this.SendPropertyChanged("TEMPLATE_EXPRESSION_NAME");
					this.OnTEMPLATE_EXPRESSION_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPRESSION", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EXPRESSION
		{
			get
			{
				return this._EXPRESSION;
			}
			set
			{
				if ((this._EXPRESSION != value))
				{
					this.OnEXPRESSIONChanging(value);
					this.SendPropertyChanging();
					this._EXPRESSION = value;
					this.SendPropertyChanged("EXPRESSION");
					this.OnEXPRESSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXECUTE_ORDER", DbType="Int NOT NULL")]
		public int EXECUTE_ORDER
		{
			get
			{
				return this._EXECUTE_ORDER;
			}
			set
			{
				if ((this._EXECUTE_ORDER != value))
				{
					this.OnEXECUTE_ORDERChanging(value);
					this.SendPropertyChanging();
					this._EXECUTE_ORDER = value;
					this.SendPropertyChanged("EXECUTE_ORDER");
					this.OnEXECUTE_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISFINALSCORE", DbType="Bit NOT NULL")]
		public bool ISFINALSCORE
		{
			get
			{
				return this._ISFINALSCORE;
			}
			set
			{
				if ((this._ISFINALSCORE != value))
				{
					this.OnISFINALSCOREChanging(value);
					this.SendPropertyChanging();
					this._ISFINALSCORE = value;
					this.SendPropertyChanged("ISFINALSCORE");
					this.OnISFINALSCOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLOWUSERDEFINE", DbType="Bit NOT NULL")]
		public bool ALLOWUSERDEFINE
		{
			get
			{
				return this._ALLOWUSERDEFINE;
			}
			set
			{
				if ((this._ALLOWUSERDEFINE != value))
				{
					this.OnALLOWUSERDEFINEChanging(value);
					this.SendPropertyChanging();
					this._ALLOWUSERDEFINE = value;
					this.SendPropertyChanged("ALLOWUSERDEFINE");
					this.OnALLOWUSERDEFINEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_SCRIPT")]
	public partial class FORM_TEMPLATE_SCRIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_ID;
		
		private string _SCRIPT_CONTENT;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnSCRIPT_CONTENTChanging(string value);
    partial void OnSCRIPT_CONTENTChanged();
    #endregion
		
		public FORM_TEMPLATE_SCRIPT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCRIPT_CONTENT", DbType="VarChar(MAX)")]
		public string SCRIPT_CONTENT
		{
			get
			{
				return this._SCRIPT_CONTENT;
			}
			set
			{
				if ((this._SCRIPT_CONTENT != value))
				{
					this.OnSCRIPT_CONTENTChanging(value);
					this.SendPropertyChanging();
					this._SCRIPT_CONTENT = value;
					this.SendPropertyChanged("SCRIPT_CONTENT");
					this.OnSCRIPT_CONTENTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_INSTANCES")]
	public partial class FORM_INSTANCES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INSTANCE_ID;
		
		private int _TEMPLATE_ID;
		
		private string _INSTANCE_NAME;
		
		private System.DateTime _INSTANCE_CREATE_DATETIME;
		
		private System.Nullable<System.DateTime> _INSTANCE_ALTER_DATETIME;
		
		private string _INSTANCE_REMARK;
		
		private string _INSTANCE_CONTENT;
		
		private string _INHOSPID;
		
		private string _CREATER;
		
		private System.Nullable<System.DateTime> _expireDate;
		
		private string _TargetType;
		
		private string _TargetID;
		
		private string _Status;
		
		private System.Nullable<int> _PARENT_INSTANCE_ID;
		
		private string _EvalTargetID;
		
		private System.Nullable<bool> _IsPass;
		
		private EntitySet<FORM_INSTANCE_ATTACHMENTS> _FORM_INSTANCE_ATTACHMENTS;
		
		private EntitySet<FORM_INSTANCE_TARGETS> _FORM_INSTANCE_TARGETS;
		
		private EntityRef<FORM_TEMPLATES> _FORM_TEMPLATES;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINSTANCE_IDChanging(int value);
    partial void OnINSTANCE_IDChanged();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnINSTANCE_NAMEChanging(string value);
    partial void OnINSTANCE_NAMEChanged();
    partial void OnINSTANCE_CREATE_DATETIMEChanging(System.DateTime value);
    partial void OnINSTANCE_CREATE_DATETIMEChanged();
    partial void OnINSTANCE_ALTER_DATETIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSTANCE_ALTER_DATETIMEChanged();
    partial void OnINSTANCE_REMARKChanging(string value);
    partial void OnINSTANCE_REMARKChanged();
    partial void OnINSTANCE_CONTENTChanging(string value);
    partial void OnINSTANCE_CONTENTChanged();
    partial void OnINHOSPIDChanging(string value);
    partial void OnINHOSPIDChanged();
    partial void OnCREATERChanging(string value);
    partial void OnCREATERChanged();
    partial void OnexpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpireDateChanged();
    partial void OnTargetTypeChanging(string value);
    partial void OnTargetTypeChanged();
    partial void OnTargetIDChanging(string value);
    partial void OnTargetIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPARENT_INSTANCE_IDChanging(System.Nullable<int> value);
    partial void OnPARENT_INSTANCE_IDChanged();
    partial void OnEvalTargetIDChanging(string value);
    partial void OnEvalTargetIDChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    #endregion
		
		public FORM_INSTANCES()
		{
			this._FORM_INSTANCE_ATTACHMENTS = new EntitySet<FORM_INSTANCE_ATTACHMENTS>(new Action<FORM_INSTANCE_ATTACHMENTS>(this.attach_FORM_INSTANCE_ATTACHMENTS), new Action<FORM_INSTANCE_ATTACHMENTS>(this.detach_FORM_INSTANCE_ATTACHMENTS));
			this._FORM_INSTANCE_TARGETS = new EntitySet<FORM_INSTANCE_TARGETS>(new Action<FORM_INSTANCE_TARGETS>(this.attach_FORM_INSTANCE_TARGETS), new Action<FORM_INSTANCE_TARGETS>(this.detach_FORM_INSTANCE_TARGETS));
			this._FORM_TEMPLATES = default(EntityRef<FORM_TEMPLATES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int INSTANCE_ID
		{
			get
			{
				return this._INSTANCE_ID;
			}
			set
			{
				if ((this._INSTANCE_ID != value))
				{
					this.OnINSTANCE_IDChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_ID = value;
					this.SendPropertyChanged("INSTANCE_ID");
					this.OnINSTANCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL")]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					if (this._FORM_TEMPLATES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_NAME", DbType="NVarChar(100)")]
		public string INSTANCE_NAME
		{
			get
			{
				return this._INSTANCE_NAME;
			}
			set
			{
				if ((this._INSTANCE_NAME != value))
				{
					this.OnINSTANCE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_NAME = value;
					this.SendPropertyChanged("INSTANCE_NAME");
					this.OnINSTANCE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_CREATE_DATETIME", DbType="DateTime NOT NULL")]
		public System.DateTime INSTANCE_CREATE_DATETIME
		{
			get
			{
				return this._INSTANCE_CREATE_DATETIME;
			}
			set
			{
				if ((this._INSTANCE_CREATE_DATETIME != value))
				{
					this.OnINSTANCE_CREATE_DATETIMEChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_CREATE_DATETIME = value;
					this.SendPropertyChanged("INSTANCE_CREATE_DATETIME");
					this.OnINSTANCE_CREATE_DATETIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_ALTER_DATETIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSTANCE_ALTER_DATETIME
		{
			get
			{
				return this._INSTANCE_ALTER_DATETIME;
			}
			set
			{
				if ((this._INSTANCE_ALTER_DATETIME != value))
				{
					this.OnINSTANCE_ALTER_DATETIMEChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_ALTER_DATETIME = value;
					this.SendPropertyChanged("INSTANCE_ALTER_DATETIME");
					this.OnINSTANCE_ALTER_DATETIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_REMARK", DbType="NVarChar(MAX)")]
		public string INSTANCE_REMARK
		{
			get
			{
				return this._INSTANCE_REMARK;
			}
			set
			{
				if ((this._INSTANCE_REMARK != value))
				{
					this.OnINSTANCE_REMARKChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_REMARK = value;
					this.SendPropertyChanged("INSTANCE_REMARK");
					this.OnINSTANCE_REMARKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_CONTENT", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string INSTANCE_CONTENT
		{
			get
			{
				return this._INSTANCE_CONTENT;
			}
			set
			{
				if ((this._INSTANCE_CONTENT != value))
				{
					this.OnINSTANCE_CONTENTChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_CONTENT = value;
					this.SendPropertyChanged("INSTANCE_CONTENT");
					this.OnINSTANCE_CONTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INHOSPID", DbType="VarChar(20)")]
		public string INHOSPID
		{
			get
			{
				return this._INHOSPID;
			}
			set
			{
				if ((this._INHOSPID != value))
				{
					this.OnINHOSPIDChanging(value);
					this.SendPropertyChanging();
					this._INHOSPID = value;
					this.SendPropertyChanged("INHOSPID");
					this.OnINHOSPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATER", DbType="VarChar(20)")]
		public string CREATER
		{
			get
			{
				return this._CREATER;
			}
			set
			{
				if ((this._CREATER != value))
				{
					this.OnCREATERChanging(value);
					this.SendPropertyChanging();
					this._CREATER = value;
					this.SendPropertyChanged("CREATER");
					this.OnCREATERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				if ((this._expireDate != value))
				{
					this.OnexpireDateChanging(value);
					this.SendPropertyChanging();
					this._expireDate = value;
					this.SendPropertyChanged("expireDate");
					this.OnexpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="NVarChar(20)")]
		public string TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="NVarChar(20)")]
		public string TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENT_INSTANCE_ID", DbType="Int")]
		public System.Nullable<int> PARENT_INSTANCE_ID
		{
			get
			{
				return this._PARENT_INSTANCE_ID;
			}
			set
			{
				if ((this._PARENT_INSTANCE_ID != value))
				{
					this.OnPARENT_INSTANCE_IDChanging(value);
					this.SendPropertyChanging();
					this._PARENT_INSTANCE_ID = value;
					this.SendPropertyChanged("PARENT_INSTANCE_ID");
					this.OnPARENT_INSTANCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvalTargetID", DbType="VarChar(20)")]
		public string EvalTargetID
		{
			get
			{
				return this._EvalTargetID;
			}
			set
			{
				if ((this._EvalTargetID != value))
				{
					this.OnEvalTargetIDChanging(value);
					this.SendPropertyChanging();
					this._EvalTargetID = value;
					this.SendPropertyChanged("EvalTargetID");
					this.OnEvalTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_INSTANCES_FORM_INSTANCE_ATTACHMENTS", Storage="_FORM_INSTANCE_ATTACHMENTS", ThisKey="INSTANCE_ID", OtherKey="INSTANCE_ID")]
		public EntitySet<FORM_INSTANCE_ATTACHMENTS> FORM_INSTANCE_ATTACHMENTS
		{
			get
			{
				return this._FORM_INSTANCE_ATTACHMENTS;
			}
			set
			{
				this._FORM_INSTANCE_ATTACHMENTS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_INSTANCES_FORM_INSTANCE_TARGETS", Storage="_FORM_INSTANCE_TARGETS", ThisKey="INSTANCE_ID", OtherKey="INSTANCE_ID")]
		public EntitySet<FORM_INSTANCE_TARGETS> FORM_INSTANCE_TARGETS
		{
			get
			{
				return this._FORM_INSTANCE_TARGETS;
			}
			set
			{
				this._FORM_INSTANCE_TARGETS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_TEMPLATES_FORM_INSTANCES", Storage="_FORM_TEMPLATES", ThisKey="TEMPLATE_ID", OtherKey="TEMPLATE_ID", IsForeignKey=true)]
		public FORM_TEMPLATES FORM_TEMPLATES
		{
			get
			{
				return this._FORM_TEMPLATES.Entity;
			}
			set
			{
				FORM_TEMPLATES previousValue = this._FORM_TEMPLATES.Entity;
				if (((previousValue != value) 
							|| (this._FORM_TEMPLATES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORM_TEMPLATES.Entity = null;
						previousValue.FORM_INSTANCES.Remove(this);
					}
					this._FORM_TEMPLATES.Entity = value;
					if ((value != null))
					{
						value.FORM_INSTANCES.Add(this);
						this._TEMPLATE_ID = value.TEMPLATE_ID;
					}
					else
					{
						this._TEMPLATE_ID = default(int);
					}
					this.SendPropertyChanged("FORM_TEMPLATES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FORM_INSTANCE_ATTACHMENTS(FORM_INSTANCE_ATTACHMENTS entity)
		{
			this.SendPropertyChanging();
			entity.FORM_INSTANCES = this;
		}
		
		private void detach_FORM_INSTANCE_ATTACHMENTS(FORM_INSTANCE_ATTACHMENTS entity)
		{
			this.SendPropertyChanging();
			entity.FORM_INSTANCES = null;
		}
		
		private void attach_FORM_INSTANCE_TARGETS(FORM_INSTANCE_TARGETS entity)
		{
			this.SendPropertyChanging();
			entity.FORM_INSTANCES = this;
		}
		
		private void detach_FORM_INSTANCE_TARGETS(FORM_INSTANCE_TARGETS entity)
		{
			this.SendPropertyChanging();
			entity.FORM_INSTANCES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATES")]
	public partial class FORM_TEMPLATES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_ID;
		
		private System.Nullable<int> _PARENT_TEMPLATE_ID;
		
		private string _TEMPLATE_NAME;
		
		private string _TEMPLATE_CATEGORY;
		
		private System.DateTime _TEMPLATE_CREATE_DATATIME;
		
		private System.Nullable<System.DateTime> _TEMPLATE_ALTER_DATATIME;
		
		private string _TEMPLATE_CONTENT;
		
		private string _TEMPLATE_REMARK;
		
		private string _TEMPLATE_TYPE;
		
		private string _ALLOW_ATTACHMENT;
		
		private string _SCORE_FIELD_ID;
		
		private string _ALERT_NEXT_MESSAGE;
		
		private System.Nullable<bool> _DISPLAY_TO_EVALTARGET;
		
		private bool _ENABLED;
		
		private bool _ALLOW_NEXT_TARGET_EDIT;
		
		private bool _IS_USER_DEFINE_TARGET;
		
		private bool _NEEDPASS;
		
		private bool _ALLOW_RETURN;
		
		private bool _ALLOW_TAKEBACK;
		
		private bool _ALLOW_VIEW_EVALTARGETDATA;
		
		private EntitySet<FORM_TEMPLATE_SUBMIT_SQL> _FORM_TEMPLATE_SUBMIT_SQL;
		
		private EntitySet<FORM_INSTANCES> _FORM_INSTANCES;
		
		private EntitySet<FORM_TEMPLATE_PERMISSION> _FORM_TEMPLATE_PERMISSION;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnPARENT_TEMPLATE_IDChanging(System.Nullable<int> value);
    partial void OnPARENT_TEMPLATE_IDChanged();
    partial void OnTEMPLATE_NAMEChanging(string value);
    partial void OnTEMPLATE_NAMEChanged();
    partial void OnTEMPLATE_CATEGORYChanging(string value);
    partial void OnTEMPLATE_CATEGORYChanged();
    partial void OnTEMPLATE_CREATE_DATATIMEChanging(System.DateTime value);
    partial void OnTEMPLATE_CREATE_DATATIMEChanged();
    partial void OnTEMPLATE_ALTER_DATATIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnTEMPLATE_ALTER_DATATIMEChanged();
    partial void OnTEMPLATE_CONTENTChanging(string value);
    partial void OnTEMPLATE_CONTENTChanged();
    partial void OnTEMPLATE_REMARKChanging(string value);
    partial void OnTEMPLATE_REMARKChanged();
    partial void OnTEMPLATE_TYPEChanging(string value);
    partial void OnTEMPLATE_TYPEChanged();
    partial void OnALLOW_ATTACHMENTChanging(string value);
    partial void OnALLOW_ATTACHMENTChanged();
    partial void OnSCORE_FIELD_IDChanging(string value);
    partial void OnSCORE_FIELD_IDChanged();
    partial void OnALERT_NEXT_MESSAGEChanging(string value);
    partial void OnALERT_NEXT_MESSAGEChanged();
    partial void OnDISPLAY_TO_EVALTARGETChanging(System.Nullable<bool> value);
    partial void OnDISPLAY_TO_EVALTARGETChanged();
    partial void OnENABLEDChanging(bool value);
    partial void OnENABLEDChanged();
    partial void OnALLOW_NEXT_TARGET_EDITChanging(bool value);
    partial void OnALLOW_NEXT_TARGET_EDITChanged();
    partial void OnIS_USER_DEFINE_TARGETChanging(bool value);
    partial void OnIS_USER_DEFINE_TARGETChanged();
    partial void OnNEEDPASSChanging(bool value);
    partial void OnNEEDPASSChanged();
    partial void OnALLOW_RETURNChanging(bool value);
    partial void OnALLOW_RETURNChanged();
    partial void OnALLOW_TAKEBACKChanging(bool value);
    partial void OnALLOW_TAKEBACKChanged();
    partial void OnALLOW_VIEW_EVALTARGETDATAChanging(bool value);
    partial void OnALLOW_VIEW_EVALTARGETDATAChanged();
    #endregion
		
		public FORM_TEMPLATES()
		{
			this._FORM_TEMPLATE_SUBMIT_SQL = new EntitySet<FORM_TEMPLATE_SUBMIT_SQL>(new Action<FORM_TEMPLATE_SUBMIT_SQL>(this.attach_FORM_TEMPLATE_SUBMIT_SQL), new Action<FORM_TEMPLATE_SUBMIT_SQL>(this.detach_FORM_TEMPLATE_SUBMIT_SQL));
			this._FORM_INSTANCES = new EntitySet<FORM_INSTANCES>(new Action<FORM_INSTANCES>(this.attach_FORM_INSTANCES), new Action<FORM_INSTANCES>(this.detach_FORM_INSTANCES));
			this._FORM_TEMPLATE_PERMISSION = new EntitySet<FORM_TEMPLATE_PERMISSION>(new Action<FORM_TEMPLATE_PERMISSION>(this.attach_FORM_TEMPLATE_PERMISSION), new Action<FORM_TEMPLATE_PERMISSION>(this.detach_FORM_TEMPLATE_PERMISSION));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENT_TEMPLATE_ID", DbType="Int")]
		public System.Nullable<int> PARENT_TEMPLATE_ID
		{
			get
			{
				return this._PARENT_TEMPLATE_ID;
			}
			set
			{
				if ((this._PARENT_TEMPLATE_ID != value))
				{
					this.OnPARENT_TEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._PARENT_TEMPLATE_ID = value;
					this.SendPropertyChanged("PARENT_TEMPLATE_ID");
					this.OnPARENT_TEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_NAME", DbType="NVarChar(100)")]
		public string TEMPLATE_NAME
		{
			get
			{
				return this._TEMPLATE_NAME;
			}
			set
			{
				if ((this._TEMPLATE_NAME != value))
				{
					this.OnTEMPLATE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_NAME = value;
					this.SendPropertyChanged("TEMPLATE_NAME");
					this.OnTEMPLATE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_CATEGORY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TEMPLATE_CATEGORY
		{
			get
			{
				return this._TEMPLATE_CATEGORY;
			}
			set
			{
				if ((this._TEMPLATE_CATEGORY != value))
				{
					this.OnTEMPLATE_CATEGORYChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_CATEGORY = value;
					this.SendPropertyChanged("TEMPLATE_CATEGORY");
					this.OnTEMPLATE_CATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_CREATE_DATATIME", DbType="DateTime NOT NULL")]
		public System.DateTime TEMPLATE_CREATE_DATATIME
		{
			get
			{
				return this._TEMPLATE_CREATE_DATATIME;
			}
			set
			{
				if ((this._TEMPLATE_CREATE_DATATIME != value))
				{
					this.OnTEMPLATE_CREATE_DATATIMEChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_CREATE_DATATIME = value;
					this.SendPropertyChanged("TEMPLATE_CREATE_DATATIME");
					this.OnTEMPLATE_CREATE_DATATIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ALTER_DATATIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> TEMPLATE_ALTER_DATATIME
		{
			get
			{
				return this._TEMPLATE_ALTER_DATATIME;
			}
			set
			{
				if ((this._TEMPLATE_ALTER_DATATIME != value))
				{
					this.OnTEMPLATE_ALTER_DATATIMEChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ALTER_DATATIME = value;
					this.SendPropertyChanged("TEMPLATE_ALTER_DATATIME");
					this.OnTEMPLATE_ALTER_DATATIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_CONTENT", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TEMPLATE_CONTENT
		{
			get
			{
				return this._TEMPLATE_CONTENT;
			}
			set
			{
				if ((this._TEMPLATE_CONTENT != value))
				{
					this.OnTEMPLATE_CONTENTChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_CONTENT = value;
					this.SendPropertyChanged("TEMPLATE_CONTENT");
					this.OnTEMPLATE_CONTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_REMARK", DbType="NVarChar(MAX)")]
		public string TEMPLATE_REMARK
		{
			get
			{
				return this._TEMPLATE_REMARK;
			}
			set
			{
				if ((this._TEMPLATE_REMARK != value))
				{
					this.OnTEMPLATE_REMARKChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_REMARK = value;
					this.SendPropertyChanged("TEMPLATE_REMARK");
					this.OnTEMPLATE_REMARKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_TYPE", DbType="VarChar(20)")]
		public string TEMPLATE_TYPE
		{
			get
			{
				return this._TEMPLATE_TYPE;
			}
			set
			{
				if ((this._TEMPLATE_TYPE != value))
				{
					this.OnTEMPLATE_TYPEChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_TYPE = value;
					this.SendPropertyChanged("TEMPLATE_TYPE");
					this.OnTEMPLATE_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLOW_ATTACHMENT", DbType="VarChar(10)")]
		public string ALLOW_ATTACHMENT
		{
			get
			{
				return this._ALLOW_ATTACHMENT;
			}
			set
			{
				if ((this._ALLOW_ATTACHMENT != value))
				{
					this.OnALLOW_ATTACHMENTChanging(value);
					this.SendPropertyChanging();
					this._ALLOW_ATTACHMENT = value;
					this.SendPropertyChanged("ALLOW_ATTACHMENT");
					this.OnALLOW_ATTACHMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCORE_FIELD_ID", DbType="VarChar(30)")]
		public string SCORE_FIELD_ID
		{
			get
			{
				return this._SCORE_FIELD_ID;
			}
			set
			{
				if ((this._SCORE_FIELD_ID != value))
				{
					this.OnSCORE_FIELD_IDChanging(value);
					this.SendPropertyChanging();
					this._SCORE_FIELD_ID = value;
					this.SendPropertyChanged("SCORE_FIELD_ID");
					this.OnSCORE_FIELD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALERT_NEXT_MESSAGE", DbType="VarChar(1000)")]
		public string ALERT_NEXT_MESSAGE
		{
			get
			{
				return this._ALERT_NEXT_MESSAGE;
			}
			set
			{
				if ((this._ALERT_NEXT_MESSAGE != value))
				{
					this.OnALERT_NEXT_MESSAGEChanging(value);
					this.SendPropertyChanging();
					this._ALERT_NEXT_MESSAGE = value;
					this.SendPropertyChanged("ALERT_NEXT_MESSAGE");
					this.OnALERT_NEXT_MESSAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAY_TO_EVALTARGET", DbType="Bit")]
		public System.Nullable<bool> DISPLAY_TO_EVALTARGET
		{
			get
			{
				return this._DISPLAY_TO_EVALTARGET;
			}
			set
			{
				if ((this._DISPLAY_TO_EVALTARGET != value))
				{
					this.OnDISPLAY_TO_EVALTARGETChanging(value);
					this.SendPropertyChanging();
					this._DISPLAY_TO_EVALTARGET = value;
					this.SendPropertyChanged("DISPLAY_TO_EVALTARGET");
					this.OnDISPLAY_TO_EVALTARGETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit NOT NULL")]
		public bool ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this.OnENABLEDChanging(value);
					this.SendPropertyChanging();
					this._ENABLED = value;
					this.SendPropertyChanged("ENABLED");
					this.OnENABLEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLOW_NEXT_TARGET_EDIT", DbType="Bit NOT NULL")]
		public bool ALLOW_NEXT_TARGET_EDIT
		{
			get
			{
				return this._ALLOW_NEXT_TARGET_EDIT;
			}
			set
			{
				if ((this._ALLOW_NEXT_TARGET_EDIT != value))
				{
					this.OnALLOW_NEXT_TARGET_EDITChanging(value);
					this.SendPropertyChanging();
					this._ALLOW_NEXT_TARGET_EDIT = value;
					this.SendPropertyChanged("ALLOW_NEXT_TARGET_EDIT");
					this.OnALLOW_NEXT_TARGET_EDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_USER_DEFINE_TARGET", DbType="Bit NOT NULL")]
		public bool IS_USER_DEFINE_TARGET
		{
			get
			{
				return this._IS_USER_DEFINE_TARGET;
			}
			set
			{
				if ((this._IS_USER_DEFINE_TARGET != value))
				{
					this.OnIS_USER_DEFINE_TARGETChanging(value);
					this.SendPropertyChanging();
					this._IS_USER_DEFINE_TARGET = value;
					this.SendPropertyChanged("IS_USER_DEFINE_TARGET");
					this.OnIS_USER_DEFINE_TARGETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEEDPASS", DbType="Bit NOT NULL")]
		public bool NEEDPASS
		{
			get
			{
				return this._NEEDPASS;
			}
			set
			{
				if ((this._NEEDPASS != value))
				{
					this.OnNEEDPASSChanging(value);
					this.SendPropertyChanging();
					this._NEEDPASS = value;
					this.SendPropertyChanged("NEEDPASS");
					this.OnNEEDPASSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLOW_RETURN", DbType="Bit NOT NULL")]
		public bool ALLOW_RETURN
		{
			get
			{
				return this._ALLOW_RETURN;
			}
			set
			{
				if ((this._ALLOW_RETURN != value))
				{
					this.OnALLOW_RETURNChanging(value);
					this.SendPropertyChanging();
					this._ALLOW_RETURN = value;
					this.SendPropertyChanged("ALLOW_RETURN");
					this.OnALLOW_RETURNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLOW_TAKEBACK", DbType="Bit NOT NULL")]
		public bool ALLOW_TAKEBACK
		{
			get
			{
				return this._ALLOW_TAKEBACK;
			}
			set
			{
				if ((this._ALLOW_TAKEBACK != value))
				{
					this.OnALLOW_TAKEBACKChanging(value);
					this.SendPropertyChanging();
					this._ALLOW_TAKEBACK = value;
					this.SendPropertyChanged("ALLOW_TAKEBACK");
					this.OnALLOW_TAKEBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLOW_VIEW_EVALTARGETDATA", DbType="Bit NOT NULL")]
		public bool ALLOW_VIEW_EVALTARGETDATA
		{
			get
			{
				return this._ALLOW_VIEW_EVALTARGETDATA;
			}
			set
			{
				if ((this._ALLOW_VIEW_EVALTARGETDATA != value))
				{
					this.OnALLOW_VIEW_EVALTARGETDATAChanging(value);
					this.SendPropertyChanging();
					this._ALLOW_VIEW_EVALTARGETDATA = value;
					this.SendPropertyChanged("ALLOW_VIEW_EVALTARGETDATA");
					this.OnALLOW_VIEW_EVALTARGETDATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_TEMPLATES_FORM_TEMPLATE_SUBMIT_SQL", Storage="_FORM_TEMPLATE_SUBMIT_SQL", ThisKey="TEMPLATE_ID", OtherKey="TEMPLATE_ID")]
		public EntitySet<FORM_TEMPLATE_SUBMIT_SQL> FORM_TEMPLATE_SUBMIT_SQL
		{
			get
			{
				return this._FORM_TEMPLATE_SUBMIT_SQL;
			}
			set
			{
				this._FORM_TEMPLATE_SUBMIT_SQL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_TEMPLATES_FORM_INSTANCES", Storage="_FORM_INSTANCES", ThisKey="TEMPLATE_ID", OtherKey="TEMPLATE_ID")]
		public EntitySet<FORM_INSTANCES> FORM_INSTANCES
		{
			get
			{
				return this._FORM_INSTANCES;
			}
			set
			{
				this._FORM_INSTANCES.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_TEMPLATES_FORM_TEMPLATE_PERMISSION", Storage="_FORM_TEMPLATE_PERMISSION", ThisKey="TEMPLATE_ID", OtherKey="TEMPLATE_ID")]
		public EntitySet<FORM_TEMPLATE_PERMISSION> FORM_TEMPLATE_PERMISSION
		{
			get
			{
				return this._FORM_TEMPLATE_PERMISSION;
			}
			set
			{
				this._FORM_TEMPLATE_PERMISSION.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FORM_TEMPLATE_SUBMIT_SQL(FORM_TEMPLATE_SUBMIT_SQL entity)
		{
			this.SendPropertyChanging();
			entity.FORM_TEMPLATES = this;
		}
		
		private void detach_FORM_TEMPLATE_SUBMIT_SQL(FORM_TEMPLATE_SUBMIT_SQL entity)
		{
			this.SendPropertyChanging();
			entity.FORM_TEMPLATES = null;
		}
		
		private void attach_FORM_INSTANCES(FORM_INSTANCES entity)
		{
			this.SendPropertyChanging();
			entity.FORM_TEMPLATES = this;
		}
		
		private void detach_FORM_INSTANCES(FORM_INSTANCES entity)
		{
			this.SendPropertyChanging();
			entity.FORM_TEMPLATES = null;
		}
		
		private void attach_FORM_TEMPLATE_PERMISSION(FORM_TEMPLATE_PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.FORM_TEMPLATES = this;
		}
		
		private void detach_FORM_TEMPLATE_PERMISSION(FORM_TEMPLATE_PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.FORM_TEMPLATES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_PERMISSION")]
	public partial class FORM_TEMPLATE_PERMISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEMPLATE_ID;
		
		private string _HOSPCODE;
		
		private string _CREATER;
		
		private System.Nullable<System.DateTime> _CREATEDATE;
		
		private EntityRef<FORM_TEMPLATES> _FORM_TEMPLATES;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnHOSPCODEChanging(string value);
    partial void OnHOSPCODEChanged();
    partial void OnCREATERChanging(string value);
    partial void OnCREATERChanged();
    partial void OnCREATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATEDATEChanged();
    #endregion
		
		public FORM_TEMPLATE_PERMISSION()
		{
			this._FORM_TEMPLATES = default(EntityRef<FORM_TEMPLATES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					if (this._FORM_TEMPLATES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOSPCODE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HOSPCODE
		{
			get
			{
				return this._HOSPCODE;
			}
			set
			{
				if ((this._HOSPCODE != value))
				{
					this.OnHOSPCODEChanging(value);
					this.SendPropertyChanging();
					this._HOSPCODE = value;
					this.SendPropertyChanged("HOSPCODE");
					this.OnHOSPCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATER", DbType="VarChar(20)")]
		public string CREATER
		{
			get
			{
				return this._CREATER;
			}
			set
			{
				if ((this._CREATER != value))
				{
					this.OnCREATERChanging(value);
					this.SendPropertyChanging();
					this._CREATER = value;
					this.SendPropertyChanged("CREATER");
					this.OnCREATERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATEDATE
		{
			get
			{
				return this._CREATEDATE;
			}
			set
			{
				if ((this._CREATEDATE != value))
				{
					this.OnCREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._CREATEDATE = value;
					this.SendPropertyChanged("CREATEDATE");
					this.OnCREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORM_TEMPLATES_FORM_TEMPLATE_PERMISSION", Storage="_FORM_TEMPLATES", ThisKey="TEMPLATE_ID", OtherKey="TEMPLATE_ID", IsForeignKey=true)]
		public FORM_TEMPLATES FORM_TEMPLATES
		{
			get
			{
				return this._FORM_TEMPLATES.Entity;
			}
			set
			{
				FORM_TEMPLATES previousValue = this._FORM_TEMPLATES.Entity;
				if (((previousValue != value) 
							|| (this._FORM_TEMPLATES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORM_TEMPLATES.Entity = null;
						previousValue.FORM_TEMPLATE_PERMISSION.Remove(this);
					}
					this._FORM_TEMPLATES.Entity = value;
					if ((value != null))
					{
						value.FORM_TEMPLATE_PERMISSION.Add(this);
						this._TEMPLATE_ID = value.TEMPLATE_ID;
					}
					else
					{
						this._TEMPLATE_ID = default(int);
					}
					this.SendPropertyChanged("FORM_TEMPLATES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORM_TEMPLATE_ELEMENTS")]
	public partial class FORM_TEMPLATE_ELEMENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TEMPLATE_ELEMENT_ID;
		
		private int _TEMPLATE_ID;
		
		private string _ID;
		
		private string _NAME;
		
		private string _CONTROL_TYPE;
		
		private string _DATA_TYPE;
		
		private System.Nullable<double> _POINTS;
		
		private string _DISPLAY_NAME;
		
		private System.Nullable<int> _GROUP_ID;
		
		private bool _ISHIDE;
		
		private System.Nullable<double> _MAXPOINT;
		
		private string _BINDVALUE;
		
		private string _BINDSQL;
		
		private bool _ALLOWOVER;
		
		private System.Nullable<int> _MinTextCount;
		
		private System.Nullable<int> _MaxTextCount;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEMPLATE_ELEMENT_IDChanging(string value);
    partial void OnTEMPLATE_ELEMENT_IDChanged();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnCONTROL_TYPEChanging(string value);
    partial void OnCONTROL_TYPEChanged();
    partial void OnDATA_TYPEChanging(string value);
    partial void OnDATA_TYPEChanged();
    partial void OnPOINTSChanging(System.Nullable<double> value);
    partial void OnPOINTSChanged();
    partial void OnDISPLAY_NAMEChanging(string value);
    partial void OnDISPLAY_NAMEChanged();
    partial void OnGROUP_IDChanging(System.Nullable<int> value);
    partial void OnGROUP_IDChanged();
    partial void OnISHIDEChanging(bool value);
    partial void OnISHIDEChanged();
    partial void OnMAXPOINTChanging(System.Nullable<double> value);
    partial void OnMAXPOINTChanged();
    partial void OnBINDVALUEChanging(string value);
    partial void OnBINDVALUEChanged();
    partial void OnBINDSQLChanging(string value);
    partial void OnBINDSQLChanged();
    partial void OnALLOWOVERChanging(bool value);
    partial void OnALLOWOVERChanged();
    partial void OnMinTextCountChanging(System.Nullable<int> value);
    partial void OnMinTextCountChanged();
    partial void OnMaxTextCountChanging(System.Nullable<int> value);
    partial void OnMaxTextCountChanged();
    #endregion
		
		public FORM_TEMPLATE_ELEMENTS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ELEMENT_ID", DbType="VarChar(60) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TEMPLATE_ELEMENT_ID
		{
			get
			{
				return this._TEMPLATE_ELEMENT_ID;
			}
			set
			{
				if ((this._TEMPLATE_ELEMENT_ID != value))
				{
					this.OnTEMPLATE_ELEMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ELEMENT_ID = value;
					this.SendPropertyChanged("TEMPLATE_ELEMENT_ID");
					this.OnTEMPLATE_ELEMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL")]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTROL_TYPE", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CONTROL_TYPE
		{
			get
			{
				return this._CONTROL_TYPE;
			}
			set
			{
				if ((this._CONTROL_TYPE != value))
				{
					this.OnCONTROL_TYPEChanging(value);
					this.SendPropertyChanging();
					this._CONTROL_TYPE = value;
					this.SendPropertyChanged("CONTROL_TYPE");
					this.OnCONTROL_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_TYPE", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string DATA_TYPE
		{
			get
			{
				return this._DATA_TYPE;
			}
			set
			{
				if ((this._DATA_TYPE != value))
				{
					this.OnDATA_TYPEChanging(value);
					this.SendPropertyChanging();
					this._DATA_TYPE = value;
					this.SendPropertyChanged("DATA_TYPE");
					this.OnDATA_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POINTS", DbType="Float")]
		public System.Nullable<double> POINTS
		{
			get
			{
				return this._POINTS;
			}
			set
			{
				if ((this._POINTS != value))
				{
					this.OnPOINTSChanging(value);
					this.SendPropertyChanging();
					this._POINTS = value;
					this.SendPropertyChanged("POINTS");
					this.OnPOINTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAY_NAME", DbType="VarChar(500)")]
		public string DISPLAY_NAME
		{
			get
			{
				return this._DISPLAY_NAME;
			}
			set
			{
				if ((this._DISPLAY_NAME != value))
				{
					this.OnDISPLAY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._DISPLAY_NAME = value;
					this.SendPropertyChanged("DISPLAY_NAME");
					this.OnDISPLAY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", DbType="Int")]
		public System.Nullable<int> GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISHIDE", DbType="Bit NOT NULL")]
		public bool ISHIDE
		{
			get
			{
				return this._ISHIDE;
			}
			set
			{
				if ((this._ISHIDE != value))
				{
					this.OnISHIDEChanging(value);
					this.SendPropertyChanging();
					this._ISHIDE = value;
					this.SendPropertyChanged("ISHIDE");
					this.OnISHIDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAXPOINT", DbType="Float")]
		public System.Nullable<double> MAXPOINT
		{
			get
			{
				return this._MAXPOINT;
			}
			set
			{
				if ((this._MAXPOINT != value))
				{
					this.OnMAXPOINTChanging(value);
					this.SendPropertyChanging();
					this._MAXPOINT = value;
					this.SendPropertyChanged("MAXPOINT");
					this.OnMAXPOINTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BINDVALUE", DbType="VarChar(50)")]
		public string BINDVALUE
		{
			get
			{
				return this._BINDVALUE;
			}
			set
			{
				if ((this._BINDVALUE != value))
				{
					this.OnBINDVALUEChanging(value);
					this.SendPropertyChanging();
					this._BINDVALUE = value;
					this.SendPropertyChanged("BINDVALUE");
					this.OnBINDVALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BINDSQL", DbType="VarChar(50)")]
		public string BINDSQL
		{
			get
			{
				return this._BINDSQL;
			}
			set
			{
				if ((this._BINDSQL != value))
				{
					this.OnBINDSQLChanging(value);
					this.SendPropertyChanging();
					this._BINDSQL = value;
					this.SendPropertyChanged("BINDSQL");
					this.OnBINDSQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLOWOVER", DbType="Bit NOT NULL")]
		public bool ALLOWOVER
		{
			get
			{
				return this._ALLOWOVER;
			}
			set
			{
				if ((this._ALLOWOVER != value))
				{
					this.OnALLOWOVERChanging(value);
					this.SendPropertyChanging();
					this._ALLOWOVER = value;
					this.SendPropertyChanged("ALLOWOVER");
					this.OnALLOWOVERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTextCount", DbType="Int")]
		public System.Nullable<int> MinTextCount
		{
			get
			{
				return this._MinTextCount;
			}
			set
			{
				if ((this._MinTextCount != value))
				{
					this.OnMinTextCountChanging(value);
					this.SendPropertyChanging();
					this._MinTextCount = value;
					this.SendPropertyChanged("MinTextCount");
					this.OnMinTextCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTextCount", DbType="Int")]
		public System.Nullable<int> MaxTextCount
		{
			get
			{
				return this._MaxTextCount;
			}
			set
			{
				if ((this._MaxTextCount != value))
				{
					this.OnMaxTextCountChanging(value);
					this.SendPropertyChanging();
					this._MaxTextCount = value;
					this.SendPropertyChanged("MaxTextCount");
					this.OnMaxTextCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
